{"ast":null,"code":"import nacl from 'tweetnacl';\nimport sha512 from 'js-sha512';\nexport function genericHash(arr) {\n  return sha512.sha512_256.array(arr);\n}\nexport function randomBytes(length) {\n  return nacl.randomBytes(length);\n}\nexport function keyPairFromSeed(seed) {\n  return nacl.sign.keyPair.fromSeed(seed);\n}\nexport function keyPair() {\n  const seed = randomBytes(nacl.box.secretKeyLength);\n  return keyPairFromSeed(seed);\n}\nexport function isValidSignatureLength(len) {\n  return len === nacl.sign.signatureLength;\n}\nexport function keyPairFromSecretKey(sk) {\n  return nacl.sign.keyPair.fromSecretKey(sk);\n}\nexport function sign(msg, secretKey) {\n  return nacl.sign.detached(msg, secretKey);\n}\nexport function bytesEqual(a, b) {\n  return nacl.verify(a, b);\n}\nexport function verify(message, signature, verifyKey) {\n  return nacl.sign.detached.verify(message, signature, verifyKey);\n}\n// constants\nexport const PUBLIC_KEY_LENGTH = nacl.sign.publicKeyLength;\nexport const SECRET_KEY_LENGTH = nacl.sign.secretKeyLength;\nexport const HASH_BYTES_LENGTH = 32;\nexport const SEED_BTYES_LENGTH = 32;","map":{"version":3,"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;AAC5B,OAAOC,MAAM,MAAM,WAAW;AAE9B,OAAM,SAAUC,WAAW,CAACC,GAAmB;EAC7C,OAAOF,MAAM,CAACG,UAAU,CAACC,KAAK,CAACF,GAAG,CAAC;AACrC;AAEA,OAAM,SAAUG,WAAW,CAACC,MAAc;EACxC,OAAOP,IAAI,CAACM,WAAW,CAACC,MAAM,CAAC;AACjC;AAEA,OAAM,SAAUC,eAAe,CAACC,IAAgB;EAC9C,OAAOT,IAAI,CAACU,IAAI,CAACC,OAAO,CAACC,QAAQ,CAACH,IAAI,CAAC;AACzC;AAEA,OAAM,SAAUE,OAAO;EACrB,MAAMF,IAAI,GAAGH,WAAW,CAACN,IAAI,CAACa,GAAG,CAACC,eAAe,CAAC;EAClD,OAAON,eAAe,CAACC,IAAI,CAAC;AAC9B;AAEA,OAAM,SAAUM,sBAAsB,CAACC,GAAW;EAChD,OAAOA,GAAG,KAAKhB,IAAI,CAACU,IAAI,CAACO,eAAe;AAC1C;AAEA,OAAM,SAAUC,oBAAoB,CAACC,EAAc;EACjD,OAAOnB,IAAI,CAACU,IAAI,CAACC,OAAO,CAACS,aAAa,CAACD,EAAE,CAAC;AAC5C;AAEA,OAAM,SAAUT,IAAI,CAACW,GAAe,EAAEC,SAAqB;EACzD,OAAOtB,IAAI,CAACU,IAAI,CAACa,QAAQ,CAACF,GAAG,EAAEC,SAAS,CAAC;AAC3C;AAEA,OAAM,SAAUE,UAAU,CAACC,CAAa,EAAEC,CAAa;EACrD,OAAO1B,IAAI,CAAC2B,MAAM,CAACF,CAAC,EAAEC,CAAC,CAAC;AAC1B;AAEA,OAAM,SAAUC,MAAM,CACpBC,OAAmB,EACnBC,SAAqB,EACrBC,SAAqB;EAErB,OAAO9B,IAAI,CAACU,IAAI,CAACa,QAAQ,CAACI,MAAM,CAACC,OAAO,EAAEC,SAAS,EAAEC,SAAS,CAAC;AACjE;AAEA;AACA,OAAO,MAAMC,iBAAiB,GAAG/B,IAAI,CAACU,IAAI,CAACsB,eAAe;AAC1D,OAAO,MAAMC,iBAAiB,GAAGjC,IAAI,CAACU,IAAI,CAACI,eAAe;AAC1D,OAAO,MAAMoB,iBAAiB,GAAG,EAAE;AACnC,OAAO,MAAMC,iBAAiB,GAAG,EAAE","names":["nacl","sha512","genericHash","arr","sha512_256","array","randomBytes","length","keyPairFromSeed","seed","sign","keyPair","fromSeed","box","secretKeyLength","isValidSignatureLength","len","signatureLength","keyPairFromSecretKey","sk","fromSecretKey","msg","secretKey","detached","bytesEqual","a","b","verify","message","signature","verifyKey","PUBLIC_KEY_LENGTH","publicKeyLength","SECRET_KEY_LENGTH","HASH_BYTES_LENGTH","SEED_BTYES_LENGTH"],"sourceRoot":"","sources":["../../../src/nacl/naclWrappers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}