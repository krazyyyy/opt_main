{"ast":null,"code":"/**\n * Base class for models\n */\n/* eslint-disable no-underscore-dangle,camelcase */\nfunction _is_primitive(val) {\n  /* eslint-enable no-underscore-dangle,camelcase */\n  return val === undefined || val == null || typeof val !== 'object' && typeof val !== 'function';\n}\nfunction _get_obj_for_encoding(val, binary) {\n  /* eslint-enable no-underscore-dangle,camelcase,no-redeclare,no-unused-vars */\n  let targetPropValue;\n  if (val instanceof Uint8Array) {\n    targetPropValue = binary ? val : Buffer.from(val).toString('base64');\n  } else if (typeof val.get_obj_for_encoding === 'function') {\n    targetPropValue = val.get_obj_for_encoding(binary);\n  } else if (Array.isArray(val)) {\n    targetPropValue = [];\n    for (const elem of val) {\n      targetPropValue.push(_get_obj_for_encoding(elem, binary));\n    }\n  } else if (typeof val === 'object') {\n    const obj = {};\n    for (const prop of Object.keys(val)) {\n      obj[prop] = _get_obj_for_encoding(val[prop], binary);\n    }\n    targetPropValue = obj;\n  } else if (_is_primitive(val)) {\n    targetPropValue = val;\n  } else {\n    throw new Error(`Unsupported value: ${String(val)}`);\n  }\n  return targetPropValue;\n}\nexport default class BaseModel {\n  /**\n   * Get an object ready for encoding to either JSON or msgpack.\n   * @param binary - Use true to indicate that the encoding can handle raw binary objects\n   *   (Uint8Arrays). Use false to indicate that raw binary objects should be converted to base64\n   *   strings. True should be used for objects that will be encoded with msgpack, and false should\n   *   be used for objects that will be encoded with JSON.\n   */\n  get_obj_for_encoding() {\n    let binary = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    /* eslint-enable no-underscore-dangle,camelcase */\n    const obj = {};\n    for (const prop of Object.keys(this.attribute_map)) {\n      const name = this.attribute_map[prop];\n      const value = this[prop];\n      if (typeof value !== 'undefined') {\n        obj[name] = value === null ? null : _get_obj_for_encoding(value, binary);\n      }\n    }\n    return obj;\n  }\n}","map":{"version":3,"mappings":"AAAA;;;AAIA;AACA,SAASA,aAAa,CAACC,GAAQ;EAC7B;EACA,OACEA,GAAG,KAAKC,SAAS,IACjBD,GAAG,IAAI,IAAI,IACV,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,UAAW;AAE1D;AAYA,SAASE,qBAAqB,CAACF,GAAQ,EAAEG,MAAe;EACtD;EACA,IAAIC,eAAoB;EAExB,IAAIJ,GAAG,YAAYK,UAAU,EAAE;IAC7BD,eAAe,GAAGD,MAAM,GAAGH,GAAG,GAAGM,MAAM,CAACC,IAAI,CAACP,GAAG,CAAC,CAACQ,QAAQ,CAAC,QAAQ,CAAC;GACrE,MAAM,IAAI,OAAOR,GAAG,CAACS,oBAAoB,KAAK,UAAU,EAAE;IACzDL,eAAe,GAAGJ,GAAG,CAACS,oBAAoB,CAACN,MAAM,CAAC;GACnD,MAAM,IAAIO,KAAK,CAACC,OAAO,CAACX,GAAG,CAAC,EAAE;IAC7BI,eAAe,GAAG,EAAE;IACpB,KAAK,MAAMQ,IAAI,IAAIZ,GAAG,EAAE;MACtBI,eAAe,CAACS,IAAI,CAACX,qBAAqB,CAACU,IAAI,EAAET,MAAM,CAAC,CAAC;;GAE5D,MAAM,IAAI,OAAOH,GAAG,KAAK,QAAQ,EAAE;IAClC,MAAMc,GAAG,GAAG,EAAE;IACd,KAAK,MAAMC,IAAI,IAAIC,MAAM,CAACC,IAAI,CAACjB,GAAG,CAAC,EAAE;MACnCc,GAAG,CAACC,IAAI,CAAC,GAAGb,qBAAqB,CAACF,GAAG,CAACe,IAAI,CAAC,EAAEZ,MAAM,CAAC;;IAEtDC,eAAe,GAAGU,GAAG;GACtB,MAAM,IAAIf,aAAa,CAACC,GAAG,CAAC,EAAE;IAC7BI,eAAe,GAAGJ,GAAG;GACtB,MAAM;IACL,MAAM,IAAIkB,KAAK,CAAC,sBAAsBC,MAAM,CAACnB,GAAG,CAAC,EAAE,CAAC;;EAEtD,OAAOI,eAAe;AACxB;AAEA,eAAc,MAAOgB,SAAS;EAI5B;;;;;;;EAOAX,oBAAoB,GAAe;IAAA,IAAdN,MAAM,uEAAG,KAAK;IACjC;IACA,MAAMW,GAAG,GAAwB,EAAE;IAEnC,KAAK,MAAMC,IAAI,IAAIC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACI,aAAa,CAAC,EAAE;MAClD,MAAMC,IAAI,GAAG,IAAI,CAACD,aAAa,CAACN,IAAI,CAAC;MACrC,MAAMQ,KAAK,GAAG,IAAI,CAACR,IAAI,CAAC;MAExB,IAAI,OAAOQ,KAAK,KAAK,WAAW,EAAE;QAChCT,GAAG,CAACQ,IAAI,CAAC,GACPC,KAAK,KAAK,IAAI,GAAG,IAAI,GAAGrB,qBAAqB,CAACqB,KAAK,EAAEpB,MAAM,CAAC;;;IAIlE,OAAOW,GAAG;EACZ","names":["_is_primitive","val","undefined","_get_obj_for_encoding","binary","targetPropValue","Uint8Array","Buffer","from","toString","get_obj_for_encoding","Array","isArray","elem","push","obj","prop","Object","keys","Error","String","BaseModel","attribute_map","name","value"],"sourceRoot":"","sources":["../../../../src/client/v2/basemodel.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}