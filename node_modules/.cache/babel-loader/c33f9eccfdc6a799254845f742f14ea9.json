{"ast":null,"code":"import { FEE_ADDR } from '../../utils/common';\nimport { CHANGE_WALLET, UPDATE_ADDRESS, CHAIN_ADDRESS_STORE, CHANGE_NETWORK, UPDATE_ADMIN_ADDR, UPDATE_GOVERNANCE_ADDR, CHANGE_WEBMODE } from './types';\nconst INITIAL_WALLET_STATE = {\n  selected: null,\n  address: '',\n  is_admin_logged: false,\n  account_store: [],\n  selected_network: null,\n  admin_addr: null,\n  governance_addr: null,\n  webMode: null\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_WALLET_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CHANGE_WALLET:\n      return {\n        ...state,\n        selected: action.payload\n      };\n    case UPDATE_ADDRESS:\n      let admin = false;\n      // admin logged in\n      if (action.payload === state.admin_addr || action.payload === FEE_ADDR) {\n        admin = true;\n      }\n      return {\n        ...state,\n        address: action.payload,\n        is_admin_logged: admin\n      };\n    case CHAIN_ADDRESS_STORE:\n      return {\n        ...state,\n        account_store: action.payload\n      };\n    case CHANGE_NETWORK:\n      return {\n        ...state,\n        selected_network: action.payload\n      };\n    case UPDATE_ADMIN_ADDR:\n      return {\n        ...state,\n        admin_addr: action.payload\n      };\n    case UPDATE_GOVERNANCE_ADDR:\n      return {\n        ...state,\n        governance_addr: action.payload\n      };\n    case CHANGE_WEBMODE:\n      return {\n        ...state,\n        webMode: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["FEE_ADDR","CHANGE_WALLET","UPDATE_ADDRESS","CHAIN_ADDRESS_STORE","CHANGE_NETWORK","UPDATE_ADMIN_ADDR","UPDATE_GOVERNANCE_ADDR","CHANGE_WEBMODE","INITIAL_WALLET_STATE","selected","address","is_admin_logged","account_store","selected_network","admin_addr","governance_addr","webMode","reducer","state","action","type","payload","admin"],"sources":["C:/Users/user/Desktop/Optimum-Staking-main/Optimum-Staking-main/frontend/src/redux/wallet/reducer.js"],"sourcesContent":["import { FEE_ADDR } from '../../utils/common';\nimport {\n    CHANGE_WALLET,\n    UPDATE_ADDRESS,\n    CHAIN_ADDRESS_STORE,\n    CHANGE_NETWORK,\n    UPDATE_ADMIN_ADDR,\n    UPDATE_GOVERNANCE_ADDR,\n    CHANGE_WEBMODE\n} from './types';\n\nconst INITIAL_WALLET_STATE = {\n    selected: null,\n    address: '',\n    is_admin_logged: false,\n    account_store: [],\n    selected_network: null,\n    admin_addr: null,\n    governance_addr: null,\n    webMode: null\n};\n\nconst reducer = (state = INITIAL_WALLET_STATE, action) => {\n    switch (action.type) {\n        case CHANGE_WALLET:\n            return {\n                ...state,\n                selected: action.payload\n            };\n        case UPDATE_ADDRESS:\n            let admin = false;\n            // admin logged in\n            if (action.payload === state.admin_addr || action.payload === FEE_ADDR) {\n                admin = true;\n            }\n            return {\n                ...state,\n                address: action.payload,\n                is_admin_logged: admin\n            };\n        case CHAIN_ADDRESS_STORE:\n            return {\n                ...state,\n                account_store: action.payload\n            };\n        case CHANGE_NETWORK:\n            return {\n                ...state,\n                selected_network: action.payload\n            };\n        case UPDATE_ADMIN_ADDR:\n            return {\n                ...state,\n                admin_addr: action.payload\n            };\n        case UPDATE_GOVERNANCE_ADDR:\n            return {\n                ...state,\n                governance_addr: action.payload\n            };\n        case CHANGE_WEBMODE:\n            return {\n                ...state,\n                webMode: action.payload\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,SACIC,aAAa,EACbC,cAAc,EACdC,mBAAmB,EACnBC,cAAc,EACdC,iBAAiB,EACjBC,sBAAsB,EACtBC,cAAc,QACX,SAAS;AAEhB,MAAMC,oBAAoB,GAAG;EACzBC,QAAQ,EAAE,IAAI;EACdC,OAAO,EAAE,EAAE;EACXC,eAAe,EAAE,KAAK;EACtBC,aAAa,EAAE,EAAE;EACjBC,gBAAgB,EAAE,IAAI;EACtBC,UAAU,EAAE,IAAI;EAChBC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,OAAO,GAAG,YAA0C;EAAA,IAAzCC,KAAK,uEAAGV,oBAAoB;EAAA,IAAEW,MAAM;EACjD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKnB,aAAa;MACd,OAAO;QACH,GAAGiB,KAAK;QACRT,QAAQ,EAAEU,MAAM,CAACE;MACrB,CAAC;IACL,KAAKnB,cAAc;MACf,IAAIoB,KAAK,GAAG,KAAK;MACjB;MACA,IAAIH,MAAM,CAACE,OAAO,KAAKH,KAAK,CAACJ,UAAU,IAAIK,MAAM,CAACE,OAAO,KAAKrB,QAAQ,EAAE;QACpEsB,KAAK,GAAG,IAAI;MAChB;MACA,OAAO;QACH,GAAGJ,KAAK;QACRR,OAAO,EAAES,MAAM,CAACE,OAAO;QACvBV,eAAe,EAAEW;MACrB,CAAC;IACL,KAAKnB,mBAAmB;MACpB,OAAO;QACH,GAAGe,KAAK;QACRN,aAAa,EAAEO,MAAM,CAACE;MAC1B,CAAC;IACL,KAAKjB,cAAc;MACf,OAAO;QACH,GAAGc,KAAK;QACRL,gBAAgB,EAAEM,MAAM,CAACE;MAC7B,CAAC;IACL,KAAKhB,iBAAiB;MAClB,OAAO;QACH,GAAGa,KAAK;QACRJ,UAAU,EAAEK,MAAM,CAACE;MACvB,CAAC;IACL,KAAKf,sBAAsB;MACvB,OAAO;QACH,GAAGY,KAAK;QACRH,eAAe,EAAEI,MAAM,CAACE;MAC5B,CAAC;IACL,KAAKd,cAAc;MACf,OAAO;QACH,GAAGW,KAAK;QACRF,OAAO,EAAEG,MAAM,CAACE;MACpB,CAAC;IACL;MACI,OAAOH,KAAK;EAAC;AAEzB,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}