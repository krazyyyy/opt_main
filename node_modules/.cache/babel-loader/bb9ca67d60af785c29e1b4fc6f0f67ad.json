{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nimport * as encoding from '../../../encoding/encoding';\nimport { setHeaders } from './compile';\nexport default class Dryrun extends JSONRequest {\n  constructor(c, dr) {\n    super(c);\n    this.blob = encoding.encode(dr.get_obj_for_encoding(true));\n  }\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/teal/dryrun';\n  }\n  /**\n   * Executes dryrun\n   * @param headers - A headers object\n   */\n  async do() {\n    let headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const txHeaders = setHeaders(headers);\n    const res = await this.c.post(this.path(), Buffer.from(this.blob), txHeaders);\n    return res.body;\n  }\n}","map":{"version":3,"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAGxC,OAAO,KAAKC,QAAQ,MAAM,4BAA4B;AACtD,SAASC,UAAU,QAAQ,WAAW;AAEtC,eAAc,MAAOC,MAAO,SAAQH,WAAW;EAG7CI,YAAYC,CAAa,EAAEC,EAA0B;IACnD,KAAK,CAACD,CAAC,CAAC;IACR,IAAI,CAACE,IAAI,GAAGN,QAAQ,CAACO,MAAM,CAACF,EAAE,CAACG,oBAAoB,CAAC,IAAI,CAAC,CAAC;EAC5D;EAEA;EACAC,IAAI;IACF,OAAO,iBAAiB;EAC1B;EAEA;;;;EAIA,MAAMC,EAAE,GAAa;IAAA,IAAZC,OAAO,uEAAG,EAAE;IACnB,MAAMC,SAAS,GAAGX,UAAU,CAACU,OAAO,CAAC;IACrC,MAAME,GAAG,GAAG,MAAM,IAAI,CAACT,CAAC,CAACU,IAAI,CAC3B,IAAI,CAACL,IAAI,EAAE,EACXM,MAAM,CAACC,IAAI,CAAC,IAAI,CAACV,IAAI,CAAC,EACtBM,SAAS,CACV;IACD,OAAOC,GAAG,CAACI,IAAI;EACjB","names":["JSONRequest","encoding","setHeaders","Dryrun","constructor","c","dr","blob","encode","get_obj_for_encoding","path","do","headers","txHeaders","res","post","Buffer","from","body"],"sourceRoot":"","sources":["../../../../../src/client/v2/algod/dryrun.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}