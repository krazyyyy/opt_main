{"ast":null,"code":"import { Buffer } from 'buffer';\nimport base32 from 'hi-base32';\nimport * as address from './encoding/address';\nimport * as encoding from './encoding/encoding';\nimport * as nacl from './nacl/naclWrappers';\nimport * as utils from './utils/utils';\nimport { translateBoxReferences } from './boxStorage';\nimport { TransactionType, isTransactionType } from './types/transactions/base';\nconst ALGORAND_TRANSACTION_LENGTH = 52;\nexport const ALGORAND_MIN_TX_FEE = 1000; // version v5\nconst ALGORAND_TRANSACTION_LEASE_LENGTH = 32;\nconst ALGORAND_MAX_ASSET_DECIMALS = 19;\nconst NUM_ADDL_BYTES_AFTER_SIGNING = 75; // NUM_ADDL_BYTES_AFTER_SIGNING is the number of bytes added to a txn after signing it\nconst ALGORAND_TRANSACTION_LEASE_LABEL_LENGTH = 5;\nconst ALGORAND_TRANSACTION_ADDRESS_LENGTH = 32;\nconst ALGORAND_TRANSACTION_REKEY_LABEL_LENGTH = 5;\nconst ASSET_METADATA_HASH_LENGTH = 32;\nconst KEYREG_VOTE_KEY_LENGTH = 32;\nconst KEYREG_SELECTION_KEY_LENGTH = 32;\nconst KEYREG_STATE_PROOF_KEY_LENGTH = 64;\nfunction getKeyregKey(input, inputName, length) {\n  if (input == null) {\n    return undefined;\n  }\n  let inputAsBuffer;\n  if (typeof input === 'string') {\n    inputAsBuffer = Buffer.from(input, 'base64');\n  } else if (input.constructor === Uint8Array) {\n    inputAsBuffer = Buffer.from(input);\n  } else if (Buffer.isBuffer(input)) {\n    inputAsBuffer = input;\n  }\n  if (inputAsBuffer == null || inputAsBuffer.byteLength !== length) {\n    throw Error(`${inputName} must be a ${length} byte Uint8Array or Buffer or base64 string.`);\n  }\n  return inputAsBuffer;\n}\n/**\n * Transaction enables construction of Algorand transactions\n * */\nexport class Transaction {\n  constructor(_ref) {\n    let {\n      ...transaction\n    } = _ref;\n    this.name = 'Transaction';\n    this.tag = Buffer.from('TX');\n    // Populate defaults\n    /* eslint-disable no-param-reassign */\n    const defaults = {\n      type: TransactionType.pay,\n      flatFee: false,\n      nonParticipation: false\n    };\n    // Default type\n    if (typeof transaction.type === 'undefined') {\n      transaction.type = defaults.type;\n    }\n    // Default flatFee\n    if (typeof transaction.flatFee === 'undefined') {\n      transaction.flatFee = defaults.flatFee;\n    }\n    // Default nonParticipation\n    if (transaction.type === TransactionType.keyreg && typeof transaction.voteKey !== 'undefined' && typeof transaction.nonParticipation === 'undefined') {\n      transaction.nonParticipation = defaults.nonParticipation;\n    }\n    /* eslint-enable no-param-reassign */\n    // Move suggested parameters from its object to inline\n    if (transaction.suggestedParams !== undefined) {\n      // Create a temporary reference to the transaction object that has params inline and also as a suggested params object\n      //   - Helpful for moving params from named object to inline\n      const reference = transaction;\n      reference.genesisHash = reference.suggestedParams.genesisHash;\n      reference.fee = reference.suggestedParams.fee;\n      if (reference.suggestedParams.flatFee !== undefined) reference.flatFee = reference.suggestedParams.flatFee;\n      reference.firstRound = reference.suggestedParams.firstRound;\n      reference.lastRound = reference.suggestedParams.lastRound;\n      reference.genesisID = reference.suggestedParams.genesisID;\n    }\n    // At this point all suggestedParams have been moved to be inline, so we can reassign the transaction object type\n    // to one which is more useful as we prepare properties for storing\n    const txn = transaction;\n    txn.from = address.decodeAddress(txn.from);\n    if (txn.to !== undefined) txn.to = address.decodeAddress(txn.to);\n    if (txn.closeRemainderTo !== undefined) txn.closeRemainderTo = address.decodeAddress(txn.closeRemainderTo);\n    if (txn.assetManager !== undefined) txn.assetManager = address.decodeAddress(txn.assetManager);\n    if (txn.assetReserve !== undefined) txn.assetReserve = address.decodeAddress(txn.assetReserve);\n    if (txn.assetFreeze !== undefined) txn.assetFreeze = address.decodeAddress(txn.assetFreeze);\n    if (txn.assetClawback !== undefined) txn.assetClawback = address.decodeAddress(txn.assetClawback);\n    if (txn.assetRevocationTarget !== undefined) txn.assetRevocationTarget = address.decodeAddress(txn.assetRevocationTarget);\n    if (txn.freezeAccount !== undefined) txn.freezeAccount = address.decodeAddress(txn.freezeAccount);\n    if (txn.reKeyTo !== undefined) txn.reKeyTo = address.decodeAddress(txn.reKeyTo);\n    if (txn.genesisHash === undefined) throw Error('genesis hash must be specified and in a base64 string.');\n    txn.genesisHash = Buffer.from(txn.genesisHash, 'base64');\n    if (txn.amount !== undefined && (!(Number.isSafeInteger(txn.amount) || typeof txn.amount === 'bigint' && txn.amount <= BigInt('0xffffffffffffffff')) || txn.amount < 0)) throw Error('Amount must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.');\n    if (!Number.isSafeInteger(txn.fee) || txn.fee < 0) throw Error('fee must be a positive number and smaller than 2^53-1');\n    if (!Number.isSafeInteger(txn.firstRound) || txn.firstRound < 0) throw Error('firstRound must be a positive number');\n    if (!Number.isSafeInteger(txn.lastRound) || txn.lastRound < 0) throw Error('lastRound must be a positive number');\n    if (txn.extraPages !== undefined && (!Number.isInteger(txn.extraPages) || txn.extraPages < 0 || txn.extraPages > 3)) throw Error('extraPages must be an Integer between and including 0 to 3');\n    if (txn.assetTotal !== undefined && (!(Number.isSafeInteger(txn.assetTotal) || typeof txn.assetTotal === 'bigint' && txn.assetTotal <= BigInt('0xffffffffffffffff')) || txn.assetTotal < 0)) throw Error('Total asset issuance must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.');\n    if (txn.assetDecimals !== undefined && (!Number.isSafeInteger(txn.assetDecimals) || txn.assetDecimals < 0 || txn.assetDecimals > ALGORAND_MAX_ASSET_DECIMALS)) throw Error(`assetDecimals must be a positive number and smaller than ${ALGORAND_MAX_ASSET_DECIMALS.toString()}`);\n    if (txn.assetIndex !== undefined && (!Number.isSafeInteger(txn.assetIndex) || txn.assetIndex < 0)) throw Error('Asset index must be a positive number and smaller than 2^53-1');\n    if (txn.appIndex !== undefined && (!Number.isSafeInteger(txn.appIndex) || txn.appIndex < 0)) throw Error('Application index must be a positive number and smaller than 2^53-1');\n    if (txn.appLocalInts !== undefined && (!Number.isSafeInteger(txn.appLocalInts) || txn.appLocalInts < 0)) throw Error('Application local ints count must be a positive number and smaller than 2^53-1');\n    if (txn.appLocalByteSlices !== undefined && (!Number.isSafeInteger(txn.appLocalByteSlices) || txn.appLocalByteSlices < 0)) throw Error('Application local byte slices count must be a positive number and smaller than 2^53-1');\n    if (txn.appGlobalInts !== undefined && (!Number.isSafeInteger(txn.appGlobalInts) || txn.appGlobalInts < 0)) throw Error('Application global ints count must be a positive number and smaller than 2^53-1');\n    if (txn.appGlobalByteSlices !== undefined && (!Number.isSafeInteger(txn.appGlobalByteSlices) || txn.appGlobalByteSlices < 0)) throw Error('Application global byte slices count must be a positive number and smaller than 2^53-1');\n    if (txn.appApprovalProgram !== undefined) {\n      if (txn.appApprovalProgram.constructor !== Uint8Array) throw Error('appApprovalProgram must be a Uint8Array.');\n    }\n    if (txn.appClearProgram !== undefined) {\n      if (txn.appClearProgram.constructor !== Uint8Array) throw Error('appClearProgram must be a Uint8Array.');\n    }\n    if (txn.appArgs !== undefined) {\n      if (!Array.isArray(txn.appArgs)) throw Error('appArgs must be an Array of Uint8Array.');\n      txn.appArgs = txn.appArgs.slice();\n      txn.appArgs.forEach(arg => {\n        if (arg.constructor !== Uint8Array) throw Error('each element of AppArgs must be a Uint8Array.');\n      });\n    } else {\n      txn.appArgs = [];\n    }\n    if (txn.appAccounts !== undefined) {\n      if (!Array.isArray(txn.appAccounts)) throw Error('appAccounts must be an Array of addresses.');\n      txn.appAccounts = txn.appAccounts.map(addressAsString => address.decodeAddress(addressAsString));\n    }\n    if (txn.appForeignApps !== undefined) {\n      if (!Array.isArray(txn.appForeignApps)) throw Error('appForeignApps must be an Array of integers.');\n      txn.appForeignApps = txn.appForeignApps.slice();\n      txn.appForeignApps.forEach(foreignAppIndex => {\n        if (!Number.isSafeInteger(foreignAppIndex) || foreignAppIndex < 0) throw Error('each foreign application index must be a positive number and smaller than 2^53-1');\n      });\n    }\n    if (txn.appForeignAssets !== undefined) {\n      if (!Array.isArray(txn.appForeignAssets)) throw Error('appForeignAssets must be an Array of integers.');\n      txn.appForeignAssets = txn.appForeignAssets.slice();\n      txn.appForeignAssets.forEach(foreignAssetIndex => {\n        if (!Number.isSafeInteger(foreignAssetIndex) || foreignAssetIndex < 0) throw Error('each foreign asset index must be a positive number and smaller than 2^53-1');\n      });\n    }\n    if (txn.boxes !== undefined) {\n      if (!Array.isArray(txn.boxes)) throw Error('boxes must be an Array of BoxReference.');\n      txn.boxes = txn.boxes.slice();\n      txn.boxes.forEach(box => {\n        if (!Number.isSafeInteger(box.appIndex) || box.name.constructor !== Uint8Array) throw Error('box app index must be a number and name must be an Uint8Array.');\n      });\n    }\n    if (txn.assetMetadataHash !== undefined && txn.assetMetadataHash.length !== 0) {\n      if (typeof txn.assetMetadataHash === 'string') {\n        txn.assetMetadataHash = new Uint8Array(Buffer.from(txn.assetMetadataHash));\n      }\n      if (txn.assetMetadataHash.constructor !== Uint8Array || txn.assetMetadataHash.byteLength !== ASSET_METADATA_HASH_LENGTH) {\n        throw Error(`assetMetadataHash must be a ${ASSET_METADATA_HASH_LENGTH} byte Uint8Array or string.`);\n      }\n      if (txn.assetMetadataHash.every(value => value === 0)) {\n        // if hash contains all 0s, omit it\n        txn.assetMetadataHash = undefined;\n      }\n    } else {\n      txn.assetMetadataHash = undefined;\n    }\n    if (txn.note !== undefined) {\n      if (txn.note.constructor !== Uint8Array) throw Error('note must be a Uint8Array.');\n    } else {\n      txn.note = new Uint8Array(0);\n    }\n    if (txn.lease !== undefined) {\n      if (txn.lease.constructor !== Uint8Array) throw Error('lease must be a Uint8Array.');\n      if (txn.lease.length !== ALGORAND_TRANSACTION_LEASE_LENGTH) throw Error(`lease must be of length ${ALGORAND_TRANSACTION_LEASE_LENGTH.toString()}.`);\n      if (txn.lease.every(value => value === 0)) {\n        // if lease contains all 0s, omit it\n        txn.lease = new Uint8Array(0);\n      }\n    } else {\n      txn.lease = new Uint8Array(0);\n    }\n    txn.voteKey = getKeyregKey(txn.voteKey, 'voteKey', KEYREG_VOTE_KEY_LENGTH);\n    txn.selectionKey = getKeyregKey(txn.selectionKey, 'selectionKey', KEYREG_SELECTION_KEY_LENGTH);\n    txn.stateProofKey = getKeyregKey(txn.stateProofKey, 'stateProofKey', KEYREG_STATE_PROOF_KEY_LENGTH);\n    // Checking non-participation key registration\n    if (txn.nonParticipation && (txn.voteKey || txn.selectionKey || txn.voteFirst || txn.stateProofKey || txn.voteLast || txn.voteKeyDilution)) {\n      throw new Error('nonParticipation is true but participation params are present.');\n    }\n    // Checking online key registration\n    if (!txn.nonParticipation && (txn.voteKey || txn.selectionKey || txn.stateProofKey || txn.voteFirst || txn.voteLast || txn.voteKeyDilution) && !(txn.voteKey && txn.selectionKey && txn.voteFirst && txn.voteLast && txn.voteKeyDilution)\n    // stateProofKey not included here for backwards compatibility\n    ) {\n      throw new Error('online key registration missing at least one of the following fields: ' + 'voteKey, selectionKey, voteFirst, voteLast, voteKeyDilution');\n    }\n    // The last option is an offline key registration where all the fields\n    // nonParticipation, voteKey, selectionKey, voteFirst, voteLast, voteKeyDilution\n    // are all undefined/false\n    // Remove unwanted properties and store transaction on instance\n    delete txn.suggestedParams;\n    Object.assign(this, utils.removeUndefinedProperties(txn));\n    // Modify Fee\n    if (!txn.flatFee) {\n      this.fee *= this.estimateSize();\n      // If suggested fee too small and will be rejected, set to min tx fee\n      if (this.fee < ALGORAND_MIN_TX_FEE) {\n        this.fee = ALGORAND_MIN_TX_FEE;\n      }\n    }\n    // say we are aware of groups\n    this.group = undefined;\n    // stpf fields\n    if (txn.stateProofType !== undefined && (!Number.isSafeInteger(txn.stateProofType) || txn.stateProofType < 0)) throw Error('State Proof type must be a positive number and smaller than 2^53-1');\n    if (txn.stateProofMessage !== undefined) {\n      if (txn.stateProofMessage.constructor !== Uint8Array) throw Error('stateProofMessage must be a Uint8Array.');\n    } else {\n      txn.stateProofMessage = new Uint8Array(0);\n    }\n    if (txn.stateProof !== undefined) {\n      if (txn.stateProof.constructor !== Uint8Array) throw Error('stateProof must be a Uint8Array.');\n    } else {\n      txn.stateProof = new Uint8Array(0);\n    }\n  }\n  // eslint-disable-next-line camelcase\n  get_obj_for_encoding() {\n    if (this.type === 'pay') {\n      const txn = {\n        amt: this.amount,\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: 'pay',\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group\n      };\n      // parse close address\n      if (this.closeRemainderTo !== undefined && address.encodeAddress(this.closeRemainderTo.publicKey) !== address.ALGORAND_ZERO_ADDRESS_STRING) {\n        txn.close = Buffer.from(this.closeRemainderTo.publicKey);\n      }\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      // allowed zero values\n      if (this.to !== undefined) txn.rcv = Buffer.from(this.to.publicKey);\n      if (!txn.note.length) delete txn.note;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (txn.grp === undefined) delete txn.grp;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.rekey) delete txn.rekey;\n      return txn;\n    }\n    if (this.type === 'keyreg') {\n      const txn = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        votekey: this.voteKey,\n        selkey: this.selectionKey,\n        sprfkey: this.stateProofKey,\n        votefst: this.voteFirst,\n        votelst: this.voteLast,\n        votekd: this.voteKeyDilution\n      };\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (txn.grp === undefined) delete txn.grp;\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      if (this.nonParticipation) {\n        txn.nonpart = true;\n      }\n      if (!txn.selkey) delete txn.selkey;\n      if (!txn.votekey) delete txn.votekey;\n      if (!txn.sprfkey) delete txn.sprfkey;\n      if (!txn.votefst) delete txn.votefst;\n      if (!txn.votelst) delete txn.votelst;\n      if (!txn.votekd) delete txn.votekd;\n      return txn;\n    }\n    if (this.type === 'acfg') {\n      // asset creation, or asset reconfigure, or asset destruction\n      const txn = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        caid: this.assetIndex,\n        apar: {\n          t: this.assetTotal,\n          df: this.assetDefaultFrozen,\n          dc: this.assetDecimals\n        }\n      };\n      if (this.assetManager !== undefined) txn.apar.m = Buffer.from(this.assetManager.publicKey);\n      if (this.assetReserve !== undefined) txn.apar.r = Buffer.from(this.assetReserve.publicKey);\n      if (this.assetFreeze !== undefined) txn.apar.f = Buffer.from(this.assetFreeze.publicKey);\n      if (this.assetClawback !== undefined) txn.apar.c = Buffer.from(this.assetClawback.publicKey);\n      if (this.assetName !== undefined) txn.apar.an = this.assetName;\n      if (this.assetUnitName !== undefined) txn.apar.un = this.assetUnitName;\n      if (this.assetURL !== undefined) txn.apar.au = this.assetURL;\n      if (this.assetMetadataHash !== undefined) txn.apar.am = Buffer.from(this.assetMetadataHash);\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      if (!txn.caid) delete txn.caid;\n      if (!txn.apar.t && !txn.apar.un && !txn.apar.an && !txn.apar.df && !txn.apar.m && !txn.apar.r && !txn.apar.f && !txn.apar.c && !txn.apar.au && !txn.apar.am && !txn.apar.dc) {\n        delete txn.apar;\n      } else {\n        if (!txn.apar.t) delete txn.apar.t;\n        if (!txn.apar.dc) delete txn.apar.dc;\n        if (!txn.apar.un) delete txn.apar.un;\n        if (!txn.apar.an) delete txn.apar.an;\n        if (!txn.apar.df) delete txn.apar.df;\n        if (!txn.apar.m) delete txn.apar.m;\n        if (!txn.apar.r) delete txn.apar.r;\n        if (!txn.apar.f) delete txn.apar.f;\n        if (!txn.apar.c) delete txn.apar.c;\n        if (!txn.apar.au) delete txn.apar.au;\n        if (!txn.apar.am) delete txn.apar.am;\n      }\n      if (txn.grp === undefined) delete txn.grp;\n      return txn;\n    }\n    if (this.type === 'axfer') {\n      // asset transfer, acceptance, revocation, mint, or burn\n      const txn = {\n        aamt: this.amount,\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        arcv: Buffer.from(this.to.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        xaid: this.assetIndex\n      };\n      if (this.closeRemainderTo !== undefined) txn.aclose = Buffer.from(this.closeRemainderTo.publicKey);\n      if (this.assetRevocationTarget !== undefined) txn.asnd = Buffer.from(this.assetRevocationTarget.publicKey);\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.aamt) delete txn.aamt;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (txn.grp === undefined) delete txn.grp;\n      if (!txn.aclose) delete txn.aclose;\n      if (!txn.asnd) delete txn.asnd;\n      if (!txn.rekey) delete txn.rekey;\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      return txn;\n    }\n    if (this.type === 'afrz') {\n      // asset freeze or unfreeze\n      const txn = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        faid: this.assetIndex,\n        afrz: this.freezeState\n      };\n      if (this.freezeAccount !== undefined) txn.fadd = Buffer.from(this.freezeAccount.publicKey);\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (!txn.afrz) delete txn.afrz;\n      if (txn.grp === undefined) delete txn.grp;\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      return txn;\n    }\n    if (this.type === 'appl') {\n      // application call of some kind\n      const txn = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        apid: this.appIndex,\n        apan: this.appOnComplete,\n        apls: {\n          nui: this.appLocalInts,\n          nbs: this.appLocalByteSlices\n        },\n        apgs: {\n          nui: this.appGlobalInts,\n          nbs: this.appGlobalByteSlices\n        },\n        apfa: this.appForeignApps,\n        apas: this.appForeignAssets,\n        apep: this.extraPages,\n        apbx: translateBoxReferences(this.boxes, this.appForeignApps, this.appIndex)\n      };\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      if (this.appApprovalProgram !== undefined) {\n        txn.apap = Buffer.from(this.appApprovalProgram);\n      }\n      if (this.appClearProgram !== undefined) {\n        txn.apsu = Buffer.from(this.appClearProgram);\n      }\n      if (this.appArgs !== undefined) {\n        txn.apaa = this.appArgs.map(arg => Buffer.from(arg));\n      }\n      if (this.appAccounts !== undefined) {\n        txn.apat = this.appAccounts.map(decodedAddress => Buffer.from(decodedAddress.publicKey));\n      }\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (!txn.apid) delete txn.apid;\n      if (!txn.apls.nui) delete txn.apls.nui;\n      if (!txn.apls.nbs) delete txn.apls.nbs;\n      if (!txn.apls.nui && !txn.apls.nbs) delete txn.apls;\n      if (!txn.apgs.nui) delete txn.apgs.nui;\n      if (!txn.apgs.nbs) delete txn.apgs.nbs;\n      if (!txn.apaa || !txn.apaa.length) delete txn.apaa;\n      if (!txn.apgs.nui && !txn.apgs.nbs) delete txn.apgs;\n      if (!txn.apap) delete txn.apap;\n      if (!txn.apsu) delete txn.apsu;\n      if (!txn.apan) delete txn.apan;\n      if (!txn.apfa || !txn.apfa.length) delete txn.apfa;\n      if (!txn.apas || !txn.apas.length) delete txn.apas;\n      for (const box of txn.apbx) {\n        if (!box.i) delete box.i;\n        if (!box.n || !box.n.length) delete box.n;\n      }\n      if (!txn.apbx || !txn.apbx.length) delete txn.apbx;\n      if (!txn.apat || !txn.apat.length) delete txn.apat;\n      if (!txn.apep) delete txn.apep;\n      if (txn.grp === undefined) delete txn.grp;\n      return txn;\n    }\n    if (this.type === 'stpf') {\n      // state proof txn\n      const txn = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        sptype: this.stateProofType,\n        spmsg: Buffer.from(this.stateProofMessage),\n        sp: Buffer.from(this.stateProof)\n      };\n      // allowed zero values\n      if (!txn.sptype) delete txn.sptype;\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (!txn.apid) delete txn.apid;\n      if (!txn.apaa || !txn.apaa.length) delete txn.apaa;\n      if (!txn.apap) delete txn.apap;\n      if (!txn.apsu) delete txn.apsu;\n      if (!txn.apan) delete txn.apan;\n      if (!txn.apfa || !txn.apfa.length) delete txn.apfa;\n      if (!txn.apas || !txn.apas.length) delete txn.apas;\n      if (!txn.apat || !txn.apat.length) delete txn.apat;\n      if (!txn.apep) delete txn.apep;\n      if (txn.grp === undefined) delete txn.grp;\n      return txn;\n    }\n    return undefined;\n  }\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(txnForEnc) {\n    const txn = Object.create(this.prototype);\n    txn.name = 'Transaction';\n    txn.tag = Buffer.from('TX');\n    txn.genesisID = txnForEnc.gen;\n    txn.genesisHash = Buffer.from(txnForEnc.gh);\n    if (!isTransactionType(txnForEnc.type)) {\n      throw new Error(`Unrecognized transaction type: ${txnForEnc.type}`);\n    }\n    txn.type = txnForEnc.type;\n    txn.fee = txnForEnc.fee;\n    txn.firstRound = txnForEnc.fv;\n    txn.lastRound = txnForEnc.lv;\n    txn.note = new Uint8Array(txnForEnc.note);\n    txn.lease = new Uint8Array(txnForEnc.lx);\n    txn.from = address.decodeAddress(address.encodeAddress(new Uint8Array(txnForEnc.snd)));\n    if (txnForEnc.grp !== undefined) txn.group = Buffer.from(txnForEnc.grp);\n    if (txnForEnc.rekey !== undefined) txn.reKeyTo = address.decodeAddress(address.encodeAddress(new Uint8Array(txnForEnc.rekey)));\n    if (txnForEnc.type === 'pay') {\n      txn.amount = txnForEnc.amt;\n      txn.to = address.decodeAddress(address.encodeAddress(new Uint8Array(txnForEnc.rcv)));\n      if (txnForEnc.close !== undefined) txn.closeRemainderTo = address.decodeAddress(address.encodeAddress(txnForEnc.close));\n    } else if (txnForEnc.type === 'keyreg') {\n      if (txnForEnc.votekey !== undefined) {\n        txn.voteKey = Buffer.from(txnForEnc.votekey);\n      }\n      if (txnForEnc.selkey !== undefined) {\n        txn.selectionKey = Buffer.from(txnForEnc.selkey);\n      }\n      if (txnForEnc.sprfkey !== undefined) {\n        txn.stateProofKey = Buffer.from(txnForEnc.sprfkey);\n      }\n      if (txnForEnc.votekd !== undefined) {\n        txn.voteKeyDilution = txnForEnc.votekd;\n      }\n      if (txnForEnc.votefst !== undefined) {\n        txn.voteFirst = txnForEnc.votefst;\n      }\n      if (txnForEnc.votelst !== undefined) {\n        txn.voteLast = txnForEnc.votelst;\n      }\n      if (txnForEnc.nonpart !== undefined) {\n        txn.nonParticipation = txnForEnc.nonpart;\n      }\n    } else if (txnForEnc.type === 'acfg') {\n      // asset creation, or asset reconfigure, or asset destruction\n      if (txnForEnc.caid !== undefined) {\n        txn.assetIndex = txnForEnc.caid;\n      }\n      if (txnForEnc.apar !== undefined) {\n        txn.assetTotal = txnForEnc.apar.t;\n        txn.assetDefaultFrozen = txnForEnc.apar.df;\n        if (txnForEnc.apar.dc !== undefined) txn.assetDecimals = txnForEnc.apar.dc;\n        if (txnForEnc.apar.m !== undefined) txn.assetManager = address.decodeAddress(address.encodeAddress(new Uint8Array(txnForEnc.apar.m)));\n        if (txnForEnc.apar.r !== undefined) txn.assetReserve = address.decodeAddress(address.encodeAddress(new Uint8Array(txnForEnc.apar.r)));\n        if (txnForEnc.apar.f !== undefined) txn.assetFreeze = address.decodeAddress(address.encodeAddress(new Uint8Array(txnForEnc.apar.f)));\n        if (txnForEnc.apar.c !== undefined) txn.assetClawback = address.decodeAddress(address.encodeAddress(new Uint8Array(txnForEnc.apar.c)));\n        if (txnForEnc.apar.un !== undefined) txn.assetUnitName = txnForEnc.apar.un;\n        if (txnForEnc.apar.an !== undefined) txn.assetName = txnForEnc.apar.an;\n        if (txnForEnc.apar.au !== undefined) txn.assetURL = txnForEnc.apar.au;\n        if (txnForEnc.apar.am !== undefined) txn.assetMetadataHash = txnForEnc.apar.am;\n      }\n    } else if (txnForEnc.type === 'axfer') {\n      // asset transfer, acceptance, revocation, mint, or burn\n      if (txnForEnc.xaid !== undefined) {\n        txn.assetIndex = txnForEnc.xaid;\n      }\n      if (txnForEnc.aamt !== undefined) txn.amount = txnForEnc.aamt;\n      if (txnForEnc.aclose !== undefined) {\n        txn.closeRemainderTo = address.decodeAddress(address.encodeAddress(new Uint8Array(txnForEnc.aclose)));\n      }\n      if (txnForEnc.asnd !== undefined) {\n        txn.assetRevocationTarget = address.decodeAddress(address.encodeAddress(new Uint8Array(txnForEnc.asnd)));\n      }\n      txn.to = address.decodeAddress(address.encodeAddress(new Uint8Array(txnForEnc.arcv)));\n    } else if (txnForEnc.type === 'afrz') {\n      if (txnForEnc.afrz !== undefined) {\n        txn.freezeState = txnForEnc.afrz;\n      }\n      if (txnForEnc.faid !== undefined) {\n        txn.assetIndex = txnForEnc.faid;\n      }\n      txn.freezeAccount = address.decodeAddress(address.encodeAddress(new Uint8Array(txnForEnc.fadd)));\n    } else if (txnForEnc.type === 'appl') {\n      if (txnForEnc.apid !== undefined) {\n        txn.appIndex = txnForEnc.apid;\n      }\n      if (txnForEnc.apan !== undefined) {\n        txn.appOnComplete = txnForEnc.apan;\n      }\n      if (txnForEnc.apls !== undefined) {\n        if (txnForEnc.apls.nui !== undefined) txn.appLocalInts = txnForEnc.apls.nui;\n        if (txnForEnc.apls.nbs !== undefined) txn.appLocalByteSlices = txnForEnc.apls.nbs;\n      }\n      if (txnForEnc.apgs !== undefined) {\n        if (txnForEnc.apgs.nui !== undefined) txn.appGlobalInts = txnForEnc.apgs.nui;\n        if (txnForEnc.apgs.nbs !== undefined) txn.appGlobalByteSlices = txnForEnc.apgs.nbs;\n      }\n      if (txnForEnc.apep !== undefined) {\n        txn.extraPages = txnForEnc.apep;\n      }\n      if (txnForEnc.apap !== undefined) {\n        txn.appApprovalProgram = new Uint8Array(txnForEnc.apap);\n      }\n      if (txnForEnc.apsu !== undefined) {\n        txn.appClearProgram = new Uint8Array(txnForEnc.apsu);\n      }\n      if (txnForEnc.apaa !== undefined) {\n        txn.appArgs = txnForEnc.apaa.map(arg => new Uint8Array(arg));\n      }\n      if (txnForEnc.apat !== undefined) {\n        txn.appAccounts = txnForEnc.apat.map(addressBytes => address.decodeAddress(address.encodeAddress(new Uint8Array(addressBytes))));\n      }\n      if (txnForEnc.apfa !== undefined) {\n        txn.appForeignApps = txnForEnc.apfa;\n      }\n      if (txnForEnc.apas !== undefined) {\n        txn.appForeignAssets = txnForEnc.apas;\n      }\n      if (txnForEnc.apbx !== undefined) {\n        txn.boxes = txnForEnc.apbx.map(box => ({\n          // We return 0 for the app ID so that it's guaranteed translateBoxReferences will\n          // translate the app index back to 0. If we instead returned the called app ID,\n          // translateBoxReferences would translate the app index to a nonzero value if the called\n          // app is also in the foreign app array.\n          appIndex: box.i ? txn.appForeignApps[box.i - 1] : 0,\n          name: box.n\n        }));\n      }\n    } else if (txnForEnc.type === 'stpf') {\n      if (txnForEnc.sptype !== undefined) {\n        txn.stateProofType = txnForEnc.sptype;\n      }\n      if (txnForEnc.sp !== undefined) {\n        txn.stateProof = txnForEnc.sp;\n      }\n      if (txnForEnc.spmsg !== undefined) {\n        txn.stateProofMessage = txnForEnc.spmsg;\n      }\n    }\n    return txn;\n  }\n  estimateSize() {\n    return this.toByte().length + NUM_ADDL_BYTES_AFTER_SIGNING;\n  }\n  bytesToSign() {\n    const encodedMsg = this.toByte();\n    return Buffer.from(utils.concatArrays(this.tag, encodedMsg));\n  }\n  toByte() {\n    return encoding.encode(this.get_obj_for_encoding());\n  }\n  // returns the raw signature\n  rawSignTxn(sk) {\n    const toBeSigned = this.bytesToSign();\n    const sig = nacl.sign(toBeSigned, sk);\n    return Buffer.from(sig);\n  }\n  signTxn(sk) {\n    // construct signed message\n    const sTxn = {\n      sig: this.rawSignTxn(sk),\n      txn: this.get_obj_for_encoding()\n    };\n    // add AuthAddr if signing with a different key than From indicates\n    const keypair = nacl.keyPairFromSecretKey(sk);\n    const pubKeyFromSk = keypair.publicKey;\n    if (address.encodeAddress(pubKeyFromSk) !== address.encodeAddress(this.from.publicKey)) {\n      sTxn.sgnr = Buffer.from(pubKeyFromSk);\n    }\n    return new Uint8Array(encoding.encode(sTxn));\n  }\n  attachSignature(signerAddr, signature) {\n    if (!nacl.isValidSignatureLength(signature.length)) {\n      throw new Error('Invalid signature length');\n    }\n    const sTxn = {\n      sig: Buffer.from(signature),\n      txn: this.get_obj_for_encoding()\n    };\n    // add AuthAddr if signing with a different key than From indicates\n    if (signerAddr !== address.encodeAddress(this.from.publicKey)) {\n      const signerPublicKey = address.decodeAddress(signerAddr).publicKey;\n      sTxn.sgnr = Buffer.from(signerPublicKey);\n    }\n    return new Uint8Array(encoding.encode(sTxn));\n  }\n  rawTxID() {\n    const enMsg = this.toByte();\n    const gh = Buffer.from(utils.concatArrays(this.tag, enMsg));\n    return Buffer.from(nacl.genericHash(gh));\n  }\n  txID() {\n    const hash = this.rawTxID();\n    return base32.encode(hash).slice(0, ALGORAND_TRANSACTION_LENGTH);\n  }\n  // add a lease to a transaction not yet having\n  // supply feePerByte to increment fee accordingly\n  addLease(lease) {\n    let feePerByte = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let mutableLease;\n    if (lease !== undefined) {\n      if (lease.constructor !== Uint8Array) throw Error('lease must be a Uint8Array.');\n      if (lease.length !== ALGORAND_TRANSACTION_LEASE_LENGTH) throw Error(`lease must be of length ${ALGORAND_TRANSACTION_LEASE_LENGTH.toString()}.`);\n      mutableLease = new Uint8Array(lease);\n    } else {\n      mutableLease = new Uint8Array(0);\n    }\n    this.lease = mutableLease;\n    if (feePerByte !== 0) {\n      this.fee += (ALGORAND_TRANSACTION_LEASE_LABEL_LENGTH + ALGORAND_TRANSACTION_LEASE_LENGTH) * feePerByte;\n    }\n  }\n  // add the rekey-to field to a transaction not yet having it\n  // supply feePerByte to increment fee accordingly\n  addRekey(reKeyTo) {\n    let feePerByte = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (reKeyTo !== undefined) {\n      this.reKeyTo = address.decodeAddress(reKeyTo);\n    }\n    if (feePerByte !== 0) {\n      this.fee += (ALGORAND_TRANSACTION_REKEY_LABEL_LENGTH + ALGORAND_TRANSACTION_ADDRESS_LENGTH) * feePerByte;\n    }\n  }\n  // build display dict for prettyPrint and toString\n  // eslint-disable-next-line no-underscore-dangle\n  _getDictForDisplay() {\n    const forPrinting = {\n      ...this\n    };\n    forPrinting.tag = forPrinting.tag.toString();\n    forPrinting.from = address.encodeAddress(forPrinting.from.publicKey);\n    if (forPrinting.to !== undefined) forPrinting.to = address.encodeAddress(forPrinting.to.publicKey);\n    // things that need fixing:\n    if (forPrinting.freezeAccount !== undefined) forPrinting.freezeAccount = address.encodeAddress(forPrinting.freezeAccount.publicKey);\n    if (forPrinting.closeRemainderTo !== undefined) forPrinting.closeRemainderTo = address.encodeAddress(forPrinting.closeRemainderTo.publicKey);\n    if (forPrinting.assetManager !== undefined) forPrinting.assetManager = address.encodeAddress(forPrinting.assetManager.publicKey);\n    if (forPrinting.assetReserve !== undefined) forPrinting.assetReserve = address.encodeAddress(forPrinting.assetReserve.publicKey);\n    if (forPrinting.assetFreeze !== undefined) forPrinting.assetFreeze = address.encodeAddress(forPrinting.assetFreeze.publicKey);\n    if (forPrinting.assetClawback !== undefined) forPrinting.assetClawback = address.encodeAddress(forPrinting.assetClawback.publicKey);\n    if (forPrinting.assetRevocationTarget !== undefined) forPrinting.assetRevocationTarget = address.encodeAddress(forPrinting.assetRevocationTarget.publicKey);\n    if (forPrinting.reKeyTo !== undefined) forPrinting.reKeyTo = address.encodeAddress(forPrinting.reKeyTo.publicKey);\n    forPrinting.genesisHash = forPrinting.genesisHash.toString('base64');\n    return forPrinting;\n  }\n  // pretty print the transaction to console\n  prettyPrint() {\n    // eslint-disable-next-line no-underscore-dangle,no-console\n    console.log(this._getDictForDisplay());\n  }\n  // get string representation\n  toString() {\n    // eslint-disable-next-line no-underscore-dangle\n    return JSON.stringify(this._getDictForDisplay());\n  }\n}\n/**\n * encodeUnsignedTransaction takes a completed txnBuilder.Transaction object, such as from the makeFoo\n * family of transactions, and converts it to a Buffer\n * @param transactionObject - the completed Transaction object\n */\nexport function encodeUnsignedTransaction(transactionObject) {\n  const objToEncode = transactionObject.get_obj_for_encoding();\n  return encoding.encode(objToEncode);\n}\n/**\n * decodeUnsignedTransaction takes a Buffer (as if from encodeUnsignedTransaction) and converts it to a txnBuilder.Transaction object\n * @param transactionBuffer - the Uint8Array containing a transaction\n */\nexport function decodeUnsignedTransaction(transactionBuffer) {\n  const partlyDecodedObject = encoding.decode(transactionBuffer);\n  return Transaction.from_obj_for_encoding(partlyDecodedObject);\n}\n/**\n * decodeSignedTransaction takes a Buffer (from transaction.signTxn) and converts it to an object\n * containing the Transaction (txn), the signature (sig), and the auth-addr field if applicable (sgnr)\n * @param transactionBuffer - the Uint8Array containing a transaction\n * @returns containing a Transaction, the signature, and possibly an auth-addr field\n */\nexport function decodeSignedTransaction(transactionBuffer) {\n  const stxnDecoded = encoding.decode(transactionBuffer);\n  const stxn = {\n    ...stxnDecoded,\n    txn: Transaction.from_obj_for_encoding(stxnDecoded.txn)\n  };\n  return stxn;\n}\nexport function instantiateTxnIfNeeded(transactionLike) {\n  return transactionLike instanceof Transaction ? transactionLike : new Transaction(transactionLike);\n}\nexport default Transaction;","map":{"version":3,"mappings":"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","names":["Buffer","base32","address","encoding","nacl","utils","translateBoxReferences","TransactionType","isTransactionType","ALGORAND_TRANSACTION_LENGTH","ALGORAND_MIN_TX_FEE","ALGORAND_TRANSACTION_LEASE_LENGTH","ALGORAND_MAX_ASSET_DECIMALS","NUM_ADDL_BYTES_AFTER_SIGNING","ALGORAND_TRANSACTION_LEASE_LABEL_LENGTH","ALGORAND_TRANSACTION_ADDRESS_LENGTH","ALGORAND_TRANSACTION_REKEY_LABEL_LENGTH","ASSET_METADATA_HASH_LENGTH","KEYREG_VOTE_KEY_LENGTH","KEYREG_SELECTION_KEY_LENGTH","KEYREG_STATE_PROOF_KEY_LENGTH","getKeyregKey","input","inputName","length","undefined","inputAsBuffer","from","constructor","Uint8Array","isBuffer","byteLength","Error","Transaction","transaction","defaults","type","pay","flatFee","nonParticipation","keyreg","voteKey","suggestedParams","reference","genesisHash","fee","firstRound","lastRound","genesisID","txn","decodeAddress","to","closeRemainderTo","assetManager","assetReserve","assetFreeze","assetClawback","assetRevocationTarget","freezeAccount","reKeyTo","amount","Number","isSafeInteger","BigInt","extraPages","isInteger","assetTotal","assetDecimals","toString","assetIndex","appIndex","appLocalInts","appLocalByteSlices","appGlobalInts","appGlobalByteSlices","appApprovalProgram","appClearProgram","appArgs","Array","isArray","slice","forEach","arg","appAccounts","map","addressAsString","appForeignApps","foreignAppIndex","appForeignAssets","foreignAssetIndex","boxes","box","name","assetMetadataHash","every","value","note","lease","selectionKey","stateProofKey","voteFirst","voteLast","voteKeyDilution","Object","assign","removeUndefinedProperties","estimateSize","group","stateProofType","stateProofMessage","stateProof","get_obj_for_encoding","amt","fv","lv","snd","publicKey","gen","gh","lx","grp","encodeAddress","ALGORAND_ZERO_ADDRESS_STRING","close","rekey","rcv","votekey","selkey","sprfkey","votefst","votelst","votekd","nonpart","caid","apar","t","df","assetDefaultFrozen","dc","m","r","f","c","assetName","an","assetUnitName","un","assetURL","au","am","aamt","arcv","xaid","aclose","asnd","faid","afrz","freezeState","fadd","apid","apan","appOnComplete","apls","nui","nbs","apgs","apfa","apas","apep","apbx","apap","apsu","apaa","apat","decodedAddress","i","n","sptype","spmsg","sp","from_obj_for_encoding","txnForEnc","create","prototype","tag","addressBytes","toByte","bytesToSign","encodedMsg","concatArrays","encode","rawSignTxn","sk","toBeSigned","sig","sign","signTxn","sTxn","keypair","keyPairFromSecretKey","pubKeyFromSk","sgnr","attachSignature","signerAddr","signature","isValidSignatureLength","signerPublicKey","rawTxID","enMsg","genericHash","txID","hash","addLease","feePerByte","mutableLease","addRekey","_getDictForDisplay","forPrinting","prettyPrint","console","log","JSON","stringify","encodeUnsignedTransaction","transactionObject","objToEncode","decodeUnsignedTransaction","transactionBuffer","partlyDecodedObject","decode","decodeSignedTransaction","stxnDecoded","stxn","instantiateTxnIfNeeded","transactionLike"],"sourceRoot":"","sources":["../../src/transaction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}