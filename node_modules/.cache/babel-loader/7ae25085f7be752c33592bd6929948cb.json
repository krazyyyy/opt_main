{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Optimum-Staking-main\\\\Optimum-Staking-main\\\\frontend\\\\src\\\\components\\\\LotteryTable.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { CircularProgress, IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableFooter, TableHead, TablePagination, TableRow, useTheme } from '@mui/material';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport { Color } from '../constants/constants';\nimport { connect } from 'react-redux';\nimport { localOPTRewardAmt } from '../utils/common';\nimport CelebrationIcon from '@mui/icons-material/Celebration';\nimport { addError } from '../redux/feedback_reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LotteryTable = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [rows, setRows] = useState([]);\n  const [showLoading, setLoading] = useState(false);\n  async function getLotteryData() {\n    setLoading(true);\n    const data = await localOPTRewardAmt(props.selected_network).catch(error => {\n      setLoading(false);\n      props.addError(error.message);\n    });\n    if ((data === null || data === void 0 ? void 0 : data.length) > 0) {\n      if (props.screen === 'Home') {\n        const winnerData = data.filter(item => item.reward !== 'Nil' || item.reward > 0);\n        setRows(winnerData);\n      } else {\n        const addressWithStake = data.filter(item => item.stake !== 'Nil' || item.stake > 0);\n        setRows(addressWithStake);\n      }\n    }\n    setLoading(false);\n  }\n  useEffect(() => {\n    getLotteryData();\n  }, [props.updateData]);\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  function TablePaginationActions(props) {\n    _s();\n    const theme = useTheme();\n    const {\n      count,\n      page,\n      rowsPerPage,\n      onPageChange\n    } = props;\n    const handleFirstPageButtonClick = event => {\n      onPageChange(event, 0);\n    };\n    const handleBackButtonClick = event => {\n      onPageChange(event, page - 1);\n    };\n    const handleNextButtonClick = event => {\n      onPageChange(event, page + 1);\n    };\n    const handleLastPageButtonClick = event => {\n      onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleFirstPageButtonClick,\n        disabled: page === 0,\n        \"aria-label\": \"first page\",\n        children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleBackButtonClick,\n        disabled: page === 0,\n        \"aria-label\": \"previous page\",\n        children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleNextButtonClick,\n        disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n        \"aria-label\": \"next page\",\n        children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleLastPageButtonClick,\n        disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n        \"aria-label\": \"last page\",\n        children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n  _s(TablePaginationActions, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n    return [useTheme];\n  });\n  TablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 24,\n      className: \"stats_card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"padding_sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Prize Game Winners Information \", /*#__PURE__*/_jsxDEV(CelebrationIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), showLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexBox_center flex_row\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n            style: {\n              color: Color.DARK_YELLOW,\n              backgroundColor: 'black'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: !rows.length ? /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: Color.RED\n            },\n            children: \"No prize game has been drawn yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              sx: {\n                backgroundColor: Color.DARK_YELLOW\n              },\n              \"aria-label\": \"custom pagination table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                sx: {\n                  borderBottom: `2px solid ${Color.RED}`,\n                  '& th': {\n                    fontSize: '1.25rem',\n                    color: Color.RED,\n                    fontWeight: 600\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    colSpan: 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    colSpan: 3,\n                    children: \"(in OPT)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Reward\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [(rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                  sx: {\n                    borderBottom: '1px solid black',\n                    '& th': {\n                      fontSize: '1rem',\n                      color: Color.RED,\n                      fontWeight: 600\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flexBox_row_center\",\n                      children: row.address\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    align: \"right\",\n                    children: row.reward\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 53\n                  }, this)]\n                }, row.address, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 49\n                }, this)), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                  style: {\n                    height: 53 * emptyRows\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 6\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TablePagination, {\n                    sx: {\n                      fontSize: '1.5rem !important',\n                      color: Color.RED\n                    },\n                    rowsPerPageOptions: [5, 10, 25, {\n                      label: 'All',\n                      value: -1\n                    }],\n                    colSpan: 4,\n                    count: rows.length,\n                    rowsPerPage: rowsPerPage,\n                    page: page,\n                    SelectProps: {\n                      inputProps: {\n                        'aria-label': 'rows per page'\n                      },\n                      native: true\n                    },\n                    onPageChange: handleChangePage,\n                    onRowsPerPageChange: handleChangeRowsPerPage,\n                    ActionsComponent: TablePaginationActions\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n_s2(LotteryTable, \"Au5AzfdpNvic6jsi72Tg9CCejDQ=\");\n_c = LotteryTable;\nconst mapStateToProps = state => {\n  return {\n    selected_network: state.wallet.selected_network\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    addError: payload => dispatch(addError(payload))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LotteryTable);\nvar _c;\n$RefreshReg$(_c, \"LotteryTable\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","CircularProgress","IconButton","Paper","Table","TableBody","TableCell","TableContainer","TableFooter","TableHead","TablePagination","TableRow","useTheme","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","Color","connect","localOPTRewardAmt","CelebrationIcon","addError","LotteryTable","props","page","setPage","rowsPerPage","setRowsPerPage","rows","setRows","showLoading","setLoading","getLotteryData","data","selected_network","catch","error","message","length","screen","winnerData","filter","item","reward","addressWithStake","stake","updateData","emptyRows","Math","max","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","TablePaginationActions","theme","count","onPageChange","handleFirstPageButtonClick","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","ceil","display","direction","propTypes","number","isRequired","func","color","DARK_YELLOW","backgroundColor","RED","borderBottom","fontSize","fontWeight","slice","map","row","address","height","label","inputProps","native","mapStateToProps","state","wallet","mapDispatchToProps","dispatch","payload"],"sources":["C:/Users/user/Desktop/Optimum-Staking-main/Optimum-Staking-main/frontend/src/components/LotteryTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    CircularProgress,\n    IconButton,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableFooter,\n    TableHead,\n    TablePagination,\n    TableRow,\n    useTheme\n} from '@mui/material';\n\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\n\nimport { Color } from '../constants/constants';\nimport { connect } from 'react-redux';\nimport { localOPTRewardAmt } from '../utils/common';\nimport CelebrationIcon from '@mui/icons-material/Celebration';\nimport { addError } from '../redux/feedback_reducer';\n\nconst LotteryTable = (props) => {\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const [rows, setRows] = useState([]);\n    const [showLoading, setLoading] = useState(false);\n\n    async function getLotteryData() {\n        setLoading(true);\n        const data = await localOPTRewardAmt(props.selected_network).catch(\n            (error) => {\n                setLoading(false);\n                props.addError(error.message);\n            }\n        );\n        if (data?.length > 0) {\n            if (props.screen === 'Home') {\n                const winnerData = data.filter(\n                    (item) => item.reward !== 'Nil' || item.reward > 0\n                );\n                setRows(winnerData);\n            } else {\n                const addressWithStake = data.filter(\n                    (item) => item.stake !== 'Nil' || item.stake > 0\n                );\n                setRows(addressWithStake);\n            }\n        }\n        setLoading(false);\n    }\n    useEffect(() => {\n        getLotteryData();\n    }, [props.updateData]);\n\n    // Avoid a layout jump when reaching the last page with empty rows.\n    const emptyRows =\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    function TablePaginationActions(props) {\n        const theme = useTheme();\n        const { count, page, rowsPerPage, onPageChange } = props;\n\n        const handleFirstPageButtonClick = (event) => {\n            onPageChange(event, 0);\n        };\n\n        const handleBackButtonClick = (event) => {\n            onPageChange(event, page - 1);\n        };\n\n        const handleNextButtonClick = (event) => {\n            onPageChange(event, page + 1);\n        };\n\n        const handleLastPageButtonClick = (event) => {\n            onPageChange(\n                event,\n                Math.max(0, Math.ceil(count / rowsPerPage) - 1)\n            );\n        };\n\n        return (\n            <div style={{ display: 'flex' }}>\n                <IconButton\n                    onClick={handleFirstPageButtonClick}\n                    disabled={page === 0}\n                    aria-label=\"first page\"\n                >\n                    {theme.direction === 'rtl' ? (\n                        <LastPageIcon />\n                    ) : (\n                        <FirstPageIcon />\n                    )}\n                </IconButton>\n                <IconButton\n                    onClick={handleBackButtonClick}\n                    disabled={page === 0}\n                    aria-label=\"previous page\"\n                >\n                    {theme.direction === 'rtl' ? (\n                        <KeyboardArrowRight />\n                    ) : (\n                        <KeyboardArrowLeft />\n                    )}\n                </IconButton>\n                <IconButton\n                    onClick={handleNextButtonClick}\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                    aria-label=\"next page\"\n                >\n                    {theme.direction === 'rtl' ? (\n                        <KeyboardArrowLeft />\n                    ) : (\n                        <KeyboardArrowRight />\n                    )}\n                </IconButton>\n                <IconButton\n                    onClick={handleLastPageButtonClick}\n                    disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                    aria-label=\"last page\"\n                >\n                    {theme.direction === 'rtl' ? (\n                        <FirstPageIcon />\n                    ) : (\n                        <LastPageIcon />\n                    )}\n                </IconButton>\n            </div>\n        );\n    }\n\n    TablePaginationActions.propTypes = {\n        count: PropTypes.number.isRequired,\n        onPageChange: PropTypes.func.isRequired,\n        page: PropTypes.number.isRequired,\n        rowsPerPage: PropTypes.number.isRequired\n    };\n    return (\n        <div>\n            <Paper elevation={24} className=\"stats_card\">\n                <div className=\"padding_sm\">\n                    <h1>\n                        Prize Game Winners Information <CelebrationIcon />\n                    </h1>\n                    {showLoading ? (\n                        <div className=\"flexBox_center flex_row\">\n                            <CircularProgress\n                                style={{\n                                    color: Color.DARK_YELLOW,\n                                    backgroundColor: 'black'\n                                }}\n                            />\n                        </div>\n                    ) : (\n                        <div>\n                            {!rows.length ? (\n                                <h2 style={{ color: Color.RED }}>\n                                    No prize game has been drawn yet.\n                                </h2>\n                            ) : (\n                                <TableContainer>\n                                    <Table\n                                        sx={{\n                                            backgroundColor: Color.DARK_YELLOW\n                                        }}\n                                        aria-label=\"custom pagination table\"\n                                    >\n                                        <TableHead\n                                            sx={{\n                                                borderBottom: `2px solid ${Color.RED}`,\n                                                '& th': {\n                                                    fontSize: '1.25rem',\n                                                    color: Color.RED,\n                                                    fontWeight: 600\n                                                }\n                                            }}\n                                        >\n                                            <TableRow>\n                                                <TableCell\n                                                    align=\"center\"\n                                                    colSpan={1}\n                                                ></TableCell>\n                                                <TableCell\n                                                    align=\"center\"\n                                                    colSpan={3}\n                                                >\n                                                    (in OPT)\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow>\n                                                <TableCell>Address</TableCell>\n                                                {/* <TableCell align=\"right\">\n                                                    Stake\n                                                </TableCell> */}\n\n                                                <TableCell align=\"right\">\n                                                    Reward\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {(rowsPerPage > 0\n                                                ? rows.slice(\n                                                      page * rowsPerPage,\n                                                      page * rowsPerPage +\n                                                          rowsPerPage\n                                                  )\n                                                : rows\n                                            ).map((row) => (\n                                                <TableRow\n                                                    key={row.address}\n                                                    sx={{\n                                                        borderBottom:\n                                                            '1px solid black',\n                                                        '& th': {\n                                                            fontSize: '1rem',\n                                                            color: Color.RED,\n                                                            fontWeight: 600\n                                                        }\n                                                    }}\n                                                >\n                                                    <TableCell\n                                                        component=\"th\"\n                                                        scope=\"row\"\n                                                    >\n                                                        <div className=\"flexBox_row_center\">\n                                                            {row.address}\n                                                        </div>\n                                                    </TableCell>\n\n                                                    {/* <TableCell\n                                                        component=\"th\"\n                                                        align=\"right\"\n                                                    >\n                                                        {row.stake}\n                                                    </TableCell> */}\n\n                                                    <TableCell\n                                                        component=\"th\"\n                                                        align=\"right\"\n                                                    >\n                                                        {row.reward}\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n\n                                            {emptyRows > 0 && (\n                                                <TableRow\n                                                    style={{\n                                                        height: 53 * emptyRows\n                                                    }}\n                                                >\n                                                    <TableCell colSpan={6} />\n                                                </TableRow>\n                                            )}\n                                        </TableBody>\n                                        <TableFooter>\n                                            <TableRow>\n                                                <TablePagination\n                                                    sx={{\n                                                        fontSize:\n                                                            '1.5rem !important',\n                                                        color: Color.RED\n                                                    }}\n                                                    rowsPerPageOptions={[\n                                                        5,\n                                                        10,\n                                                        25,\n                                                        {\n                                                            label: 'All',\n                                                            value: -1\n                                                        }\n                                                    ]}\n                                                    colSpan={4}\n                                                    count={rows.length}\n                                                    rowsPerPage={rowsPerPage}\n                                                    page={page}\n                                                    SelectProps={{\n                                                        inputProps: {\n                                                            'aria-label':\n                                                                'rows per page'\n                                                        },\n                                                        native: true\n                                                    }}\n                                                    onPageChange={\n                                                        handleChangePage\n                                                    }\n                                                    onRowsPerPageChange={\n                                                        handleChangeRowsPerPage\n                                                    }\n                                                    ActionsComponent={\n                                                        TablePaginationActions\n                                                    }\n                                                />\n                                            </TableRow>\n                                        </TableFooter>\n                                    </Table>\n                                </TableContainer>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </Paper>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        selected_network: state.wallet.selected_network\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addError: (payload) => dispatch(addError(payload))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LotteryTable);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,SACIC,gBAAgB,EAChBC,UAAU,EACVC,KAAK,EACLC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,WAAW,EACXC,SAAS,EACTC,eAAe,EACfC,QAAQ,EACRC,QAAQ,QACL,eAAe;AAEtB,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,iBAAiB,MAAM,uCAAuC;AACrE,OAAOC,kBAAkB,MAAM,wCAAwC;AACvE,OAAOC,YAAY,MAAM,8BAA8B;AAEvD,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,iBAAiB,QAAQ,iBAAiB;AACnD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,SAASC,QAAQ,QAAQ,2BAA2B;AAAC;AAErD,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC6B,IAAI,EAAEC,OAAO,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC+B,WAAW,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAEjD,eAAeiC,cAAc,GAAG;IAC5BD,UAAU,CAAC,IAAI,CAAC;IAChB,MAAME,IAAI,GAAG,MAAMd,iBAAiB,CAACI,KAAK,CAACW,gBAAgB,CAAC,CAACC,KAAK,CAC7DC,KAAK,IAAK;MACPL,UAAU,CAAC,KAAK,CAAC;MACjBR,KAAK,CAACF,QAAQ,CAACe,KAAK,CAACC,OAAO,CAAC;IACjC,CAAC,CACJ;IACD,IAAI,CAAAJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,MAAM,IAAG,CAAC,EAAE;MAClB,IAAIf,KAAK,CAACgB,MAAM,KAAK,MAAM,EAAE;QACzB,MAAMC,UAAU,GAAGP,IAAI,CAACQ,MAAM,CACzBC,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAK,KAAK,IAAID,IAAI,CAACC,MAAM,GAAG,CAAC,CACrD;QACDd,OAAO,CAACW,UAAU,CAAC;MACvB,CAAC,MAAM;QACH,MAAMI,gBAAgB,GAAGX,IAAI,CAACQ,MAAM,CAC/BC,IAAI,IAAKA,IAAI,CAACG,KAAK,KAAK,KAAK,IAAIH,IAAI,CAACG,KAAK,GAAG,CAAC,CACnD;QACDhB,OAAO,CAACe,gBAAgB,CAAC;MAC7B;IACJ;IACAb,UAAU,CAAC,KAAK,CAAC;EACrB;EACAjC,SAAS,CAAC,MAAM;IACZkC,cAAc,EAAE;EACpB,CAAC,EAAE,CAACT,KAAK,CAACuB,UAAU,CAAC,CAAC;;EAEtB;EACA,MAAMC,SAAS,GACXvB,IAAI,GAAG,CAAC,GAAGwB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGzB,IAAI,IAAIE,WAAW,GAAGE,IAAI,CAACU,MAAM,CAAC,GAAG,CAAC;EAEtE,MAAMY,gBAAgB,GAAG,CAACC,KAAK,EAAEC,OAAO,KAAK;IACzC3B,OAAO,CAAC2B,OAAO,CAAC;EACpB,CAAC;EAED,MAAMC,uBAAuB,GAAIF,KAAK,IAAK;IACvCxB,cAAc,CAAC2B,QAAQ,CAACH,KAAK,CAACI,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;IAChD/B,OAAO,CAAC,CAAC,CAAC;EACd,CAAC;EAED,SAASgC,sBAAsB,CAAClC,KAAK,EAAE;IAAA;IACnC,MAAMmC,KAAK,GAAG9C,QAAQ,EAAE;IACxB,MAAM;MAAE+C,KAAK;MAAEnC,IAAI;MAAEE,WAAW;MAAEkC;IAAa,CAAC,GAAGrC,KAAK;IAExD,MAAMsC,0BAA0B,GAAIV,KAAK,IAAK;MAC1CS,YAAY,CAACT,KAAK,EAAE,CAAC,CAAC;IAC1B,CAAC;IAED,MAAMW,qBAAqB,GAAIX,KAAK,IAAK;MACrCS,YAAY,CAACT,KAAK,EAAE3B,IAAI,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,MAAMuC,qBAAqB,GAAIZ,KAAK,IAAK;MACrCS,YAAY,CAACT,KAAK,EAAE3B,IAAI,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,MAAMwC,yBAAyB,GAAIb,KAAK,IAAK;MACzCS,YAAY,CACRT,KAAK,EACLH,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACiB,IAAI,CAACN,KAAK,GAAGjC,WAAW,CAAC,GAAG,CAAC,CAAC,CAClD;IACL,CAAC;IAED,oBACI;MAAK,KAAK,EAAE;QAAEwC,OAAO,EAAE;MAAO,CAAE;MAAA,wBAC5B,QAAC,UAAU;QACP,OAAO,EAAEL,0BAA2B;QACpC,QAAQ,EAAErC,IAAI,KAAK,CAAE;QACrB,cAAW,YAAY;QAAA,UAEtBkC,KAAK,CAACS,SAAS,KAAK,KAAK,gBACtB,QAAC,YAAY;UAAA;UAAA;UAAA;QAAA,QAAG,gBAEhB,QAAC,aAAa;UAAA;UAAA;UAAA;QAAA;MACjB;QAAA;QAAA;QAAA;MAAA,QACQ,eACb,QAAC,UAAU;QACP,OAAO,EAAEL,qBAAsB;QAC/B,QAAQ,EAAEtC,IAAI,KAAK,CAAE;QACrB,cAAW,eAAe;QAAA,UAEzBkC,KAAK,CAACS,SAAS,KAAK,KAAK,gBACtB,QAAC,kBAAkB;UAAA;UAAA;UAAA;QAAA,QAAG,gBAEtB,QAAC,iBAAiB;UAAA;UAAA;UAAA;QAAA;MACrB;QAAA;QAAA;QAAA;MAAA,QACQ,eACb,QAAC,UAAU;QACP,OAAO,EAAEJ,qBAAsB;QAC/B,QAAQ,EAAEvC,IAAI,IAAIwB,IAAI,CAACiB,IAAI,CAACN,KAAK,GAAGjC,WAAW,CAAC,GAAG,CAAE;QACrD,cAAW,WAAW;QAAA,UAErBgC,KAAK,CAACS,SAAS,KAAK,KAAK,gBACtB,QAAC,iBAAiB;UAAA;UAAA;UAAA;QAAA,QAAG,gBAErB,QAAC,kBAAkB;UAAA;UAAA;UAAA;QAAA;MACtB;QAAA;QAAA;QAAA;MAAA,QACQ,eACb,QAAC,UAAU;QACP,OAAO,EAAEH,yBAA0B;QACnC,QAAQ,EAAExC,IAAI,IAAIwB,IAAI,CAACiB,IAAI,CAACN,KAAK,GAAGjC,WAAW,CAAC,GAAG,CAAE;QACrD,cAAW,WAAW;QAAA,UAErBgC,KAAK,CAACS,SAAS,KAAK,KAAK,gBACtB,QAAC,aAAa;UAAA;UAAA;UAAA;QAAA,QAAG,gBAEjB,QAAC,YAAY;UAAA;UAAA;UAAA;QAAA;MAChB;QAAA;QAAA;QAAA;MAAA,QACQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACX;EAEd;EAAC,GAvEQV,sBAAsB;IAAA,QACb7C,QAAQ;EAAA;EAwE1B6C,sBAAsB,CAACW,SAAS,GAAG;IAC/BT,KAAK,EAAE3D,SAAS,CAACqE,MAAM,CAACC,UAAU;IAClCV,YAAY,EAAE5D,SAAS,CAACuE,IAAI,CAACD,UAAU;IACvC9C,IAAI,EAAExB,SAAS,CAACqE,MAAM,CAACC,UAAU;IACjC5C,WAAW,EAAE1B,SAAS,CAACqE,MAAM,CAACC;EAClC,CAAC;EACD,oBACI;IAAA,uBACI,QAAC,KAAK;MAAC,SAAS,EAAE,EAAG;MAAC,SAAS,EAAC,YAAY;MAAA,uBACxC;QAAK,SAAS,EAAC,YAAY;QAAA,wBACvB;UAAA,WAAI,iCAC+B,uBAAC,eAAe;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QACjD,EACJxC,WAAW,gBACR;UAAK,SAAS,EAAC,yBAAyB;UAAA,uBACpC,QAAC,gBAAgB;YACb,KAAK,EAAE;cACH0C,KAAK,EAAEvD,KAAK,CAACwD,WAAW;cACxBC,eAAe,EAAE;YACrB;UAAE;YAAA;YAAA;YAAA;UAAA;QACJ;UAAA;UAAA;UAAA;QAAA,QACA,gBAEN;UAAA,UACK,CAAC9C,IAAI,CAACU,MAAM,gBACT;YAAI,KAAK,EAAE;cAAEkC,KAAK,EAAEvD,KAAK,CAAC0D;YAAI,CAAE;YAAA,UAAC;UAEjC;YAAA;YAAA;YAAA;UAAA,QAAK,gBAEL,QAAC,cAAc;YAAA,uBACX,QAAC,KAAK;cACF,EAAE,EAAE;gBACAD,eAAe,EAAEzD,KAAK,CAACwD;cAC3B,CAAE;cACF,cAAW,yBAAyB;cAAA,wBAEpC,QAAC,SAAS;gBACN,EAAE,EAAE;kBACAG,YAAY,EAAG,aAAY3D,KAAK,CAAC0D,GAAI,EAAC;kBACtC,MAAM,EAAE;oBACJE,QAAQ,EAAE,SAAS;oBACnBL,KAAK,EAAEvD,KAAK,CAAC0D,GAAG;oBAChBG,UAAU,EAAE;kBAChB;gBACJ,CAAE;gBAAA,wBAEF,QAAC,QAAQ;kBAAA,wBACL,QAAC,SAAS;oBACN,KAAK,EAAC,QAAQ;oBACd,OAAO,EAAE;kBAAE;oBAAA;oBAAA;oBAAA;kBAAA,QACF,eACb,QAAC,SAAS;oBACN,KAAK,EAAC,QAAQ;oBACd,OAAO,EAAE,CAAE;oBAAA,UACd;kBAED;oBAAA;oBAAA;oBAAA;kBAAA,QAAY;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QACL,eACX,QAAC,QAAQ;kBAAA,wBACL,QAAC,SAAS;oBAAA,UAAC;kBAAO;oBAAA;oBAAA;oBAAA;kBAAA,QAAY,eAK9B,QAAC,SAAS;oBAAC,KAAK,EAAC,OAAO;oBAAA,UAAC;kBAEzB;oBAAA;oBAAA;oBAAA;kBAAA,QAAY;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QACL;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACH,eACZ,QAAC,SAAS;gBAAA,WACL,CAACpD,WAAW,GAAG,CAAC,GACXE,IAAI,CAACmD,KAAK,CACNvD,IAAI,GAAGE,WAAW,EAClBF,IAAI,GAAGE,WAAW,GACdA,WAAW,CAClB,GACDE,IAAI,EACRoD,GAAG,CAAEC,GAAG,iBACN,QAAC,QAAQ;kBAEL,EAAE,EAAE;oBACAL,YAAY,EACR,iBAAiB;oBACrB,MAAM,EAAE;sBACJC,QAAQ,EAAE,MAAM;sBAChBL,KAAK,EAAEvD,KAAK,CAAC0D,GAAG;sBAChBG,UAAU,EAAE;oBAChB;kBACJ,CAAE;kBAAA,wBAEF,QAAC,SAAS;oBACN,SAAS,EAAC,IAAI;oBACd,KAAK,EAAC,KAAK;oBAAA,uBAEX;sBAAK,SAAS,EAAC,oBAAoB;sBAAA,UAC9BG,GAAG,CAACC;oBAAO;sBAAA;sBAAA;sBAAA;oBAAA;kBACV;oBAAA;oBAAA;oBAAA;kBAAA,QACE,eASZ,QAAC,SAAS;oBACN,SAAS,EAAC,IAAI;oBACd,KAAK,EAAC,OAAO;oBAAA,UAEZD,GAAG,CAACtC;kBAAM;oBAAA;oBAAA;oBAAA;kBAAA,QACH;gBAAA,GAhCPsC,GAAG,CAACC,OAAO;kBAAA;kBAAA;kBAAA;gBAAA,QAkCvB,CAAC,EAEDnC,SAAS,GAAG,CAAC,iBACV,QAAC,QAAQ;kBACL,KAAK,EAAE;oBACHoC,MAAM,EAAE,EAAE,GAAGpC;kBACjB,CAAE;kBAAA,uBAEF,QAAC,SAAS;oBAAC,OAAO,EAAE;kBAAE;oBAAA;oBAAA;oBAAA;kBAAA;gBAAG;kBAAA;kBAAA;kBAAA;gBAAA,QAEhC;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACO,eACZ,QAAC,WAAW;gBAAA,uBACR,QAAC,QAAQ;kBAAA,uBACL,QAAC,eAAe;oBACZ,EAAE,EAAE;sBACA8B,QAAQ,EACJ,mBAAmB;sBACvBL,KAAK,EAAEvD,KAAK,CAAC0D;oBACjB,CAAE;oBACF,kBAAkB,EAAE,CAChB,CAAC,EACD,EAAE,EACF,EAAE,EACF;sBACIS,KAAK,EAAE,KAAK;sBACZ5B,KAAK,EAAE,CAAC;oBACZ,CAAC,CACH;oBACF,OAAO,EAAE,CAAE;oBACX,KAAK,EAAE5B,IAAI,CAACU,MAAO;oBACnB,WAAW,EAAEZ,WAAY;oBACzB,IAAI,EAAEF,IAAK;oBACX,WAAW,EAAE;sBACT6D,UAAU,EAAE;wBACR,YAAY,EACR;sBACR,CAAC;sBACDC,MAAM,EAAE;oBACZ,CAAE;oBACF,YAAY,EACRpC,gBACH;oBACD,mBAAmB,EACfG,uBACH;oBACD,gBAAgB,EACZI;kBACH;oBAAA;oBAAA;oBAAA;kBAAA;gBACH;kBAAA;kBAAA;kBAAA;gBAAA;cACK;gBAAA;gBAAA;gBAAA;cAAA,QACD;YAAA;cAAA;cAAA;cAAA;YAAA;UACV;YAAA;YAAA;YAAA;UAAA;QAEf;UAAA;UAAA;UAAA;QAAA,QAER;MAAA;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACN;AAEd,CAAC;AAAC,IArSInC,YAAY;AAAA,KAAZA,YAAY;AAuSlB,MAAMiE,eAAe,GAAIC,KAAK,IAAK;EAC/B,OAAO;IACHtD,gBAAgB,EAAEsD,KAAK,CAACC,MAAM,CAACvD;EACnC,CAAC;AACL,CAAC;AAED,MAAMwD,kBAAkB,GAAIC,QAAQ,IAAK;EACrC,OAAO;IACHtE,QAAQ,EAAGuE,OAAO,IAAKD,QAAQ,CAACtE,QAAQ,CAACuE,OAAO,CAAC;EACrD,CAAC;AACL,CAAC;AAED,eAAe1E,OAAO,CAACqE,eAAe,EAAEG,kBAAkB,CAAC,CAACpE,YAAY,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}