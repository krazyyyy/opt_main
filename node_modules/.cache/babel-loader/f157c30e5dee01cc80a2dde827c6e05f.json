{"ast":null,"code":"/* eslint-disable no-bitwise */\n/**\n * Utilities for working with program bytes.\n */\n/** @deprecated langspec.json is deprecated aross all SDKs */\nimport langspec from './langspec.json';\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nlet opcodes;\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nconst maxCost = 20000;\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nconst maxLength = 1000;\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport function parseUvarint(array) {\n  let x = 0;\n  let s = 0;\n  for (let i = 0; i < array.length; i++) {\n    const b = array[i];\n    if (b < 0x80) {\n      if (i > 9 || i === 9 && b > 1) {\n        return [0, -(i + 1)];\n      }\n      return [x | b << s, i + 1];\n    }\n    x += (b & 0x7f) << s;\n    s += 7;\n  }\n  return [0, 0];\n}\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nfunction readIntConstBlock(program, pc) {\n  let size = 1;\n  const parsed = parseUvarint(program.slice(pc + size));\n  const numInts = parsed[0];\n  let bytesUsed = parsed[1];\n  if (bytesUsed <= 0) {\n    throw new Error(`could not decode int const block size at pc=${pc + size}`);\n  }\n  const ints = [];\n  size += bytesUsed;\n  for (let i = 0; i < numInts; i++) {\n    if (pc + size >= program.length) {\n      throw new Error('intcblock ran past end of program');\n    }\n    let numberFound;\n    [numberFound, bytesUsed] = parseUvarint(program.slice(pc + size));\n    if (bytesUsed <= 0) {\n      throw new Error(`could not decode int const[${i}] block size at pc=${pc + size}`);\n    }\n    ints.push(numberFound);\n    size += bytesUsed;\n  }\n  return [size, ints];\n}\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nfunction readByteConstBlock(program, pc) {\n  let size = 1;\n  const parsed = parseUvarint(program.slice(pc + size));\n  const numInts = parsed[0];\n  let bytesUsed = parsed[1];\n  if (bytesUsed <= 0) {\n    throw new Error(`could not decode []byte const block size at pc=${pc + size}`);\n  }\n  const byteArrays = [];\n  size += bytesUsed;\n  for (let i = 0; i < numInts; i++) {\n    if (pc + size >= program.length) {\n      throw new Error('bytecblock ran past end of program');\n    }\n    let itemLen;\n    [itemLen, bytesUsed] = parseUvarint(program.slice(pc + size));\n    if (bytesUsed <= 0) {\n      throw new Error(`could not decode []byte] const[${i}] block size at pc=${pc + size}`);\n    }\n    size += bytesUsed;\n    if (pc + size + itemLen > program.length) {\n      throw new Error('bytecblock ran past end of program');\n    }\n    const byteArray = program.slice(pc + size, pc + size + itemLen);\n    byteArrays.push(byteArray);\n    size += itemLen;\n  }\n  return [size, byteArrays];\n}\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nfunction readPushIntOp(program, pc) {\n  let size = 1;\n  const [numberFound, bytesUsed] = parseUvarint(program.slice(pc + size));\n  if (bytesUsed <= 0) {\n    throw new Error(`could not decode push int const at pc=${pc + size}`);\n  }\n  size += bytesUsed;\n  return [size, numberFound];\n}\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nfunction readPushByteOp(program, pc) {\n  let size = 1;\n  const [itemLen, bytesUsed] = parseUvarint(program.slice(pc + size));\n  if (bytesUsed <= 0) {\n    throw new Error(`could not decode push []byte const size at pc=${pc + size}`);\n  }\n  size += bytesUsed;\n  if (pc + size + itemLen > program.length) {\n    throw new Error('pushbytes ran past end of program');\n  }\n  const byteArray = program.slice(pc + size, pc + size + itemLen);\n  size += itemLen;\n  return [size, byteArray];\n}\n/** readProgram validates program for length and running cost,\n * and additionally provides the found int variables and byte blocks\n *\n * @deprecated Validation relies on metadata (`langspec.json`) that\n * does not accurately represent opcode behavior across program versions.\n * The behavior of `readProgram` relies on `langspec.json`.\n * Thus, this method is being deprecated.\n *\n * @param program - Program to check\n * @param args - Program arguments as array of Uint8Array arrays\n * @throws\n * @returns\n */\nexport function readProgram(program, args) {\n  const intcblockOpcode = 32;\n  const bytecblockOpcode = 38;\n  const pushbytesOpcode = 128;\n  const pushintOpcode = 129;\n  if (!program) {\n    throw new Error('empty program');\n  }\n  if (typeof args === 'undefined') {\n    // eslint-disable-next-line no-param-reassign\n    args = [];\n  }\n  if (!Array.isArray(args)) {\n    throw new Error('invalid arguments');\n  }\n  const [version, vlen] = parseUvarint(program);\n  if (vlen <= 0) {\n    throw new Error('version parsing error');\n  }\n  if (version > langspec.EvalMaxVersion) {\n    throw new Error('unsupported version');\n  }\n  let cost = 0;\n  let {\n    length\n  } = program;\n  for (const arg of args) {\n    length += arg.length;\n  }\n  if (length > maxLength) {\n    throw new Error('program too long');\n  }\n  if (!opcodes) {\n    opcodes = {};\n    for (const op of langspec.Ops) {\n      opcodes[op.Opcode] = op;\n    }\n  }\n  let pc = vlen;\n  let ints = [];\n  let byteArrays = [];\n  while (pc < program.length) {\n    const op = opcodes[program[pc]];\n    if (op === undefined) {\n      throw new Error('invalid instruction');\n    }\n    cost += op.Cost;\n    let size = op.Size;\n    if (size === 0) {\n      switch (op.Opcode) {\n        case intcblockOpcode:\n          {\n            let foundInts;\n            [size, foundInts] = readIntConstBlock(program, pc);\n            ints = ints.concat(foundInts);\n            break;\n          }\n        case bytecblockOpcode:\n          {\n            let foundByteArrays;\n            [size, foundByteArrays] = readByteConstBlock(program, pc);\n            byteArrays = byteArrays.concat(foundByteArrays);\n            break;\n          }\n        case pushintOpcode:\n          {\n            let foundInt;\n            [size, foundInt] = readPushIntOp(program, pc);\n            ints.push(foundInt);\n            break;\n          }\n        case pushbytesOpcode:\n          {\n            let foundByteArray;\n            [size, foundByteArray] = readPushByteOp(program, pc);\n            byteArrays.push(foundByteArray);\n            break;\n          }\n        default:\n          {\n            throw new Error('invalid instruction');\n          }\n      }\n    }\n    pc += size;\n  }\n  // costs calculated dynamically starting in v4\n  if (version < 4 && cost > maxCost) {\n    throw new Error('program too costly for version < 4. consider using v4.');\n  }\n  return [ints, byteArrays, true];\n}\n/**\n * checkProgram validates program for length and running cost\n *\n * @deprecated Validation relies on metadata (`langspec.json`) that\n * does not accurately represent opcode behavior across program versions.\n * The behavior of `checkProgram` relies on `langspec.json`.\n * Thus, this method is being deprecated.\n *\n * @param program - Program to check\n * @param args - Program arguments as array of Uint8Array arrays\n * @throws\n * @returns true if success\n */\nexport function checkProgram(program, args) {\n  const [,, success] = readProgram(program, args);\n  return success;\n}\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport function checkIntConstBlock(program, pc) {\n  const [size] = readIntConstBlock(program, pc);\n  return size;\n}\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport function checkByteConstBlock(program, pc) {\n  const [size] = readByteConstBlock(program, pc);\n  return size;\n}\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport function checkPushIntOp(program, pc) {\n  const [size] = readPushIntOp(program, pc);\n  return size;\n}\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport function checkPushByteOp(program, pc) {\n  const [size] = readPushByteOp(program, pc);\n  return size;\n}\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport const langspecEvalMaxVersion = langspec.EvalMaxVersion;\n/** @deprecated for langspec.json is deprecated aross all SDKs */\nexport const langspecLogicSigVersion = langspec.LogicSigVersion;","map":{"version":3,"mappings":"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","names":["langspec","opcodes","maxCost","maxLength","parseUvarint","array","x","s","i","length","b","readIntConstBlock","program","pc","size","parsed","slice","numInts","bytesUsed","Error","ints","numberFound","push","readByteConstBlock","byteArrays","itemLen","byteArray","readPushIntOp","readPushByteOp","readProgram","args","intcblockOpcode","bytecblockOpcode","pushbytesOpcode","pushintOpcode","Array","isArray","version","vlen","EvalMaxVersion","cost","arg","op","Ops","Opcode","undefined","Cost","Size","foundInts","concat","foundByteArrays","foundInt","foundByteArray","checkProgram","success","checkIntConstBlock","checkByteConstBlock","checkPushIntOp","checkPushByteOp","langspecEvalMaxVersion","langspecLogicSigVersion","LogicSigVersion"],"sourceRoot":"","sources":["../../../src/logic/logic.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}