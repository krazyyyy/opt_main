{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAssetHolding = void 0;\n/**\n * Returns `account` balance of `assetID`. Returns 0 if the account is not\n * opted-in to the given asset id.\n * @param algodClient Algodv2 instance\n * @param accountAddress account to return assetholding info\n * @param assetID asset index\n */\nasync function getAssetHolding(algodClient, accountAddress, assetID) {\n  const accountInfo = await algodClient.accountInformation(accountAddress).do();\n  for (const asset of accountInfo.assets) {\n    if (asset[\"asset-id\"] === assetID) {\n      return asset;\n    }\n  }\n  return undefined;\n}\nexports.getAssetHolding = getAssetHolding;","map":{"version":3,"mappings":";;;;;;AAEA;;;;;;;AAOO,eAAeA,eAAe,CACpCC,WAAoB,EACpBC,cAAsB,EACtBC,OAAe;EAEf,MAAMC,WAAW,GAAG,MAAMH,WAAW,CAACI,kBAAkB,CAACH,cAAc,CAAC,CAACI,EAAE,EAAE;EAC7E,KAAK,MAAMC,KAAK,IAAIH,WAAW,CAACI,MAAM,EAAE;IACvC,IAAID,KAAK,CAAC,UAAU,CAAC,KAAKJ,OAAO,EAAE;MAClC,OAAOI,KAAK;;;EAGd,OAAOE,SAAS;AACjB;AAZAC","names":["getAssetHolding","algodClient","accountAddress","assetID","accountInfo","accountInformation","do","asset","assets","undefined","exports"],"sourceRoot":"","sources":["../../src/lib/status.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}