{"ast":null,"code":"import { AppActions } from '../constants/constants.js';\nconst {\n  types\n} = require('@algo-builder/web');\nconst {\n  OptAppID,\n  tryExecuteTx\n} = require('./common.js');\nexport async function setGovernanceRewardRate(web, adminAddr, network, rewardRateNumber, rewardRateDecimals) {\n  console.log(\"Reward rate no. \", rewardRateNumber);\n  console.log(\"Reward rate decimals. \", rewardRateDecimals);\n\n  // Sets the reward rate(apy) for the current governance period\n  const txParams = {\n    type: types.TransactionType.CallApp,\n    sign: types.SignType.SecretKey,\n    fromAccountAddr: adminAddr,\n    appID: OptAppID(network),\n    payFlags: {\n      totalFee: 1000\n    },\n    appArgs: [AppActions.SET_GOV_REWARD_RATE, `int:${rewardRateNumber}`, `int:${rewardRateDecimals}`]\n  };\n  await tryExecuteTx(web, txParams);\n}","map":{"version":3,"names":["AppActions","types","require","OptAppID","tryExecuteTx","setGovernanceRewardRate","web","adminAddr","network","rewardRateNumber","rewardRateDecimals","console","log","txParams","type","TransactionType","CallApp","sign","SignType","SecretKey","fromAccountAddr","appID","payFlags","totalFee","appArgs","SET_GOV_REWARD_RATE"],"sources":["C:/Users/user/Desktop/Optimum-Staking-main/Optimum-Staking-main/frontend/src/utils/set_gov_reward_rate.js"],"sourcesContent":["import { AppActions } from '../constants/constants.js';\nconst { types } = require('@algo-builder/web');\nconst { OptAppID, tryExecuteTx } = require('./common.js');\n\nexport async function setGovernanceRewardRate(\n    web,\n    adminAddr,\n    network,\n    rewardRateNumber,\n    rewardRateDecimals\n) {\n    console.log(\"Reward rate no. \", rewardRateNumber);\n    console.log(\"Reward rate decimals. \", rewardRateDecimals);\n\n    // Sets the reward rate(apy) for the current governance period\n    const txParams = {\n        type: types.TransactionType.CallApp,\n        sign: types.SignType.SecretKey,\n        fromAccountAddr: adminAddr,\n        appID: OptAppID(network),\n        payFlags: { totalFee: 1000 },\n        appArgs: [\n            AppActions.SET_GOV_REWARD_RATE,\n            `int:${rewardRateNumber}`,\n            `int:${rewardRateDecimals}`\n        ]\n    };\n\n    await tryExecuteTx(web, txParams);\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,2BAA2B;AACtD,MAAM;EAAEC;AAAM,CAAC,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAC9C,MAAM;EAAEC,QAAQ;EAAEC;AAAa,CAAC,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEzD,OAAO,eAAeG,uBAAuB,CACzCC,GAAG,EACHC,SAAS,EACTC,OAAO,EACPC,gBAAgB,EAChBC,kBAAkB,EACpB;EACEC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,gBAAgB,CAAC;EACjDE,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,kBAAkB,CAAC;;EAEzD;EACA,MAAMG,QAAQ,GAAG;IACbC,IAAI,EAAEb,KAAK,CAACc,eAAe,CAACC,OAAO;IACnCC,IAAI,EAAEhB,KAAK,CAACiB,QAAQ,CAACC,SAAS;IAC9BC,eAAe,EAAEb,SAAS;IAC1Bc,KAAK,EAAElB,QAAQ,CAACK,OAAO,CAAC;IACxBc,QAAQ,EAAE;MAAEC,QAAQ,EAAE;IAAK,CAAC;IAC5BC,OAAO,EAAE,CACLxB,UAAU,CAACyB,mBAAmB,EAC7B,OAAMhB,gBAAiB,EAAC,EACxB,OAAMC,kBAAmB,EAAC;EAEnC,CAAC;EAED,MAAMN,YAAY,CAACE,GAAG,EAAEO,QAAQ,CAAC;AACrC"},"metadata":{},"sourceType":"module"}