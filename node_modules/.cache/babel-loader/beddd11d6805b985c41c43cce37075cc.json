{"ast":null,"code":"/**\n * Enum for application transaction types.\n *\n * The full list is available at https://developer.algorand.org/docs/reference/transactions/\n */\nexport var TransactionType;\n(function (TransactionType) {\n  /**\n   * Payment transaction\n   */\n  TransactionType[\"pay\"] = \"pay\";\n  /**\n   * Key registration transaction\n   */\n  TransactionType[\"keyreg\"] = \"keyreg\";\n  /**\n   * Asset configuration transaction\n   */\n  TransactionType[\"acfg\"] = \"acfg\";\n  /**\n   * Asset transfer transaction\n   */\n  TransactionType[\"axfer\"] = \"axfer\";\n  /**\n   * Asset freeze transaction\n   */\n  TransactionType[\"afrz\"] = \"afrz\";\n  /**\n   * Application transaction\n   */\n  TransactionType[\"appl\"] = \"appl\";\n  /**\n   * State proof transaction\n   */\n  TransactionType[\"stpf\"] = \"stpf\";\n})(TransactionType || (TransactionType = {}));\nexport function isTransactionType(s) {\n  return s === TransactionType.pay || s === TransactionType.keyreg || s === TransactionType.acfg || s === TransactionType.axfer || s === TransactionType.afrz || s === TransactionType.appl || s === TransactionType.stpf;\n}\n/**\n * Enums for application transactions on-transaction-complete behavior\n */\nexport var OnApplicationComplete;\n(function (OnApplicationComplete) {\n  /**\n   * NoOpOC indicates that an application transaction will simply call its\n   * ApprovalProgram\n   */\n  OnApplicationComplete[OnApplicationComplete[\"NoOpOC\"] = 0] = \"NoOpOC\";\n  /**\n   * OptInOC indicates that an application transaction will allocate some\n   * LocalState for the application in the sender's account\n   */\n  OnApplicationComplete[OnApplicationComplete[\"OptInOC\"] = 1] = \"OptInOC\";\n  /**\n   * CloseOutOC indicates that an application transaction will deallocate\n   * some LocalState for the application from the user's account\n   */\n  OnApplicationComplete[OnApplicationComplete[\"CloseOutOC\"] = 2] = \"CloseOutOC\";\n  /**\n   * ClearStateOC is similar to CloseOutOC, but may never fail. This\n   * allows users to reclaim their minimum balance from an application\n   * they no longer wish to opt in to.\n   */\n  OnApplicationComplete[OnApplicationComplete[\"ClearStateOC\"] = 3] = \"ClearStateOC\";\n  /**\n   * UpdateApplicationOC indicates that an application transaction will\n   * update the ApprovalProgram and ClearStateProgram for the application\n   */\n  OnApplicationComplete[OnApplicationComplete[\"UpdateApplicationOC\"] = 4] = \"UpdateApplicationOC\";\n  /**\n   * DeleteApplicationOC indicates that an application transaction will\n   * delete the AppParams for the application from the creator's balance\n   * record\n   */\n  OnApplicationComplete[OnApplicationComplete[\"DeleteApplicationOC\"] = 5] = \"DeleteApplicationOC\";\n})(OnApplicationComplete || (OnApplicationComplete = {}));","map":{"version":3,"mappings":"AAAA;;;;;AAKA,WAAYA,eAkCX;AAlCD,WAAYA,eAAe;EACzB;;;EAGAA,8BAAW;EAEX;;;EAGAA,oCAAiB;EAEjB;;;EAGAA,gCAAa;EAEb;;;EAGAA,kCAAe;EAEf;;;EAGAA,gCAAa;EAEb;;;EAGAA,gCAAa;EACb;;;EAGAA,gCAAa;AACf,CAAC,EAlCWA,eAAe,KAAfA,eAAe;AAoC3B,OAAM,SAAUC,iBAAiB,CAACC,CAAS;EACzC,OACEA,CAAC,KAAKF,eAAe,CAACG,GAAG,IACzBD,CAAC,KAAKF,eAAe,CAACI,MAAM,IAC5BF,CAAC,KAAKF,eAAe,CAACK,IAAI,IAC1BH,CAAC,KAAKF,eAAe,CAACM,KAAK,IAC3BJ,CAAC,KAAKF,eAAe,CAACO,IAAI,IAC1BL,CAAC,KAAKF,eAAe,CAACQ,IAAI,IAC1BN,CAAC,KAAKF,eAAe,CAACS,IAAI;AAE9B;AAEA;;;AAGA,WAAYC,qBAsCX;AAtCD,WAAYA,qBAAqB;EAC/B;;;;EAIAA,qEAAM;EAEN;;;;EAIAA,uEAAO;EAEP;;;;EAIAA,6EAAU;EAEV;;;;;EAKAA,iFAAY;EAEZ;;;;EAIAA,+FAAmB;EAEnB;;;;;EAKAA,+FAAmB;AACrB,CAAC,EAtCWA,qBAAqB,KAArBA,qBAAqB","names":["TransactionType","isTransactionType","s","pay","keyreg","acfg","axfer","afrz","appl","stpf","OnApplicationComplete"],"sourceRoot":"","sources":["../../../../src/types/transactions/base.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}