{"ast":null,"code":"/**\n * Configure how integers in JSON response will be decoded.\n */\nvar IntDecoding;\n(function (IntDecoding) {\n  /**\n   * All integers will be decoded as Numbers, meaning any values greater than\n   * Number.MAX_SAFE_INTEGER will lose precision.\n   */\n  IntDecoding[\"DEFAULT\"] = \"default\";\n  /**\n   * All integers will be decoded as Numbers, but if any values are greater than\n   * Number.MAX_SAFE_INTEGER an error will be thrown.\n   */\n  IntDecoding[\"SAFE\"] = \"safe\";\n  /**\n   * Integers will be decoded as Numbers if they are less than or equal to\n   * Number.MAX_SAFE_INTEGER, otherwise they will be decoded as BigInts.\n   */\n  IntDecoding[\"MIXED\"] = \"mixed\";\n  /**\n   * All integers will be decoded as BigInts.\n   */\n  IntDecoding[\"BIGINT\"] = \"bigint\";\n})(IntDecoding || (IntDecoding = {}));\nexport default IntDecoding;","map":{"version":3,"mappings":"AAAA;;;AAGA,IAAKA,WAuBJ;AAvBD,WAAKA,WAAW;EACd;;;;EAIAA,kCAAmB;EAEnB;;;;EAIAA,4BAAa;EAEb;;;;EAIAA,8BAAe;EAEf;;;EAGAA,gCAAiB;AACnB,CAAC,EAvBIA,WAAW,KAAXA,WAAW;AAyBhB,eAAeA,WAAW","names":["IntDecoding"],"sourceRoot":"","sources":["../../../src/types/intDecoding.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}