{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Optimum-Staking-main\\\\Optimum-Staking-main\\\\frontend\\\\src\\\\components\\\\modal\\\\LoginModal.jsx\",\n  _s = $RefreshSig$();\n/* global AlgoSigner */\nimport React, { useEffect } from 'react';\nimport algosigner from \"../../assets/images/algosigner.svg\";\nimport myalgo from \"../../assets/images/myalgo.svg\";\nimport { connect } from 'react-redux';\nimport { Button, CircularProgress, Dialog, DialogTitle, List, ListItem, ListItemButton, ListItemText } from '@mui/material';\nimport { addChainAddressStore, changeNetwork, changeWallet, changeWebMode, updateAddress, updateAdminAddr } from '../../redux/wallet/actions';\nimport { addError } from '../../redux/feedback_reducer';\nimport { Color, Wallet, CurrentNetwork } from '../../constants/constants';\nimport { OptAppID, readAppGlobalState } from '../../utils/common';\nimport { getNetworkAlgodConfig, indexerClient } from '../../utils/algob.config';\nimport { MyAlgoWalletSession, WebMode } from '@algo-builder/web';\nimport { encodeAddress } from 'algosdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginModal = props => {\n  _s();\n  const [openModal, setOpenModal] = React.useState(true);\n  console.log(props);\n  const [loading, setLoading] = React.useState(false);\n  const [showAddressInfo, setShowAddressInfo] = React.useState(props.selected);\n  const [accountInfoArray, setAccountInfoArray] = React.useState(props.account_store ? props.account_store : []);\n  const [selectedAddress, setSelectedAddress] = React.useState(props.address ? props.address : undefined);\n  const [selectedNetwork, setSelectedNetwork] = React.useState(props.selected_network);\n  const handleCloseModal = () => props.setShowWalletModal(false);\n  //   const handleCloseModal = () => setOpenModal(false);\n\n  async function handleNetworkSelection() {\n    let network = CurrentNetwork;\n    props.changeNetwork(network);\n    setSelectedNetwork(network);\n    await addAdminAddr(network);\n  }\n  React.useEffect(() => {\n    // props.closeModal(openModal)\n    //   setShowWalletModal()\n    handleNetworkSelection();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [openModal]);\n  async function getAccountInfo(value) {\n    let accountStore = [];\n    for (const acc of value) {\n      if (acc && acc.address) {\n        const accountInfo = await indexerClient(selectedNetwork).lookupAccountByID(acc.address).do();\n        let account = accountInfo.account;\n        accountStore.push({\n          address: account.address,\n          amount: account.amount / 1e6\n        });\n      }\n    }\n    setAccountInfoArray(accountStore);\n    return accountStore;\n  }\n  const handleClick = async selectedWallet => {\n    if (selectedWallet === Wallet.ALGOSIGNER) {\n      if (typeof AlgoSigner === 'undefined') {\n        AlgoSigner.connect().then(async d => {\n          var _await$AlgoSigner$acc;\n          const address = (_await$AlgoSigner$acc = await AlgoSigner.accounts({\n            ledger: selectedNetwork\n          })) !== null && _await$AlgoSigner$acc !== void 0 ? _await$AlgoSigner$acc : [];\n          if (address.length) {\n            props.changeWallet(Wallet.ALGOSIGNER);\n            props.changeWebMode(new WebMode(AlgoSigner, selectedNetwork));\n            // fetching only if new address is added to wallet (since network change is not allowed by sign out)\n            if (address.length === accountInfoArray.length) {\n              setLoading(true);\n              const accountInfo = await getAccountInfo(address);\n              setLoading(false);\n              props.addChainAddressStore(accountInfo);\n            }\n            setShowAddressInfo(true);\n          }\n        }).catch(e => {\n          console.error(e);\n          props.addError(JSON.stringify(e));\n          handleCloseModal();\n        });\n      } else {\n        props.addError('AlgoSigner is NOT installed.');\n        handleCloseModal();\n      }\n    } else if (selectedWallet === Wallet.MY_ALGO_WALLET) {\n      let myAlgo = new MyAlgoWalletSession(getNetworkAlgodConfig(selectedNetwork));\n      await myAlgo.connectToMyAlgo().catch(e => {\n        console.error(e);\n        props.addError(JSON.stringify(e));\n        handleCloseModal();\n      });\n      props.changeWebMode(myAlgo);\n      if (myAlgo.accounts.length) {\n        setLoading(true);\n        const accountInfo = await getAccountInfo(myAlgo.accounts);\n        setLoading(false);\n        props.addChainAddressStore(accountInfo);\n        props.changeWallet(Wallet.MY_ALGO_WALLET);\n        setShowAddressInfo(true);\n      }\n    }\n  };\n  async function addAdminAddr(network) {\n    const globalState = await readAppGlobalState(selectedAddress, OptAppID(network), network);\n    const address = encodeAddress(Buffer.from(globalState.get('admin'), 'base64'));\n    props.updateAdminAddr(address);\n  }\n  function setAddressInfo(address) {\n    setSelectedAddress(address);\n    props.updateAddress(address);\n    setTimeout(() => {\n      handleCloseModal();\n    }, 500);\n  }\n  useEffect(() => {\n    const handleClick = e => {\n      e.target.id == 'loginModal' && e.target.classList.remove('active');\n    };\n    window.addEventListener('click', handleClick);\n    return () => window.removeEventListener('click', handleClick);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loginModal\",\n    className: \"active w-[100%]  h-[100vh] fixed top-0 left-0 flex justify-center items-center z-[222]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#16041B] absolute opacity-[0.6] pointer-events-none \\r w-[100%] h-[100%]\\r \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pop-up flex w-[320px] h-[320px] flex-col items-center justify-center md:w-[25vw] md:h-[21.484375vw] z-[2] overflow-hidden relative \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginModalOverlays\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginModalOverlayTop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginModalOverlayRightBotom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginModalOverlayRightBotom2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this), !showAddressInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex w-[320px] h-[320px] flex-col items-center justify-center md:w-[25vw] md:h-[21.484375vw] z-[2] overflow-hidden relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-[20px] z-[5] leading-[24px] mb-[22px] md:text-[1.5625vw] md:leading-[1.875vw] text-center md:mb-[1.71875vw] font-[colus] text-[#FFFFFF]\",\n          children: \"Connect to wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 4\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-[273px] cursor-pointer z-[5] h-[82px] md:w-[21.328125vw] md:h-[6.40625vw] mx-[auto] bg-[#EDDB0F] rounded-[9px] flex justify-start items-center\\r\\npl-[16px] md:pl-[1.25vw]\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-x-[12px] md:gap-x-[0.9375vw]\",\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: \"2rem\",\n              style: {\n                color: Color.RED,\n                marginLeft: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-[18px] leading-[21.6px] md:text-[1.40625vw] md:leading-[1.6875] font-[700] text-[#1E131A]\",\n              children: \" Fetching Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex w-[320px] h-[320px] flex-col items-center justify-center md:w-[25vw] md:h-[21.484375vw] z-[2] overflow-hidden relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-[273px] cursor-pointer z-[5] h-[82px] md:w-[21.328125vw] md:h-[6.40625vw] mx-[auto] bg-[#EDDB0F] rounded-[9px] mb-[16px] md:mb-[1.25vw]\\r flex justify-start items-center\\r pl-[16px] md:pl-[1.25vw] \\r \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => handleClick(Wallet.ALGOSIGNER),\n              className: \"flex items-center gap-x-[12px] md:gap-x-[0.9375vw]\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: algosigner,\n                alt: \"Algosigner \",\n                className: \"w-[50px] h-[50px] md:w-[3.90625vw] md:h-[3.90625vw]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-[18px] leading-[21.6px] md:text-[1.40625vw] md:leading-[1.6875] font-[700] text-[#1E131A]\",\n                children: \"Algosigner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setLoading(true);\n              handleClick(Wallet.MY_ALGO_WALLET);\n            },\n            className: \"w-[273px] cursor-pointer z-[5] h-[82px] md:w-[21.328125vw] md:h-[6.40625vw] mx-[auto] bg-[#EDDB0F] rounded-[9px] flex justify-start items-center\\r pl-[16px] md:pl-[1.25vw]\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-x-[12px] md:gap-x-[0.9375vw]\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: myalgo,\n                alt: \"Myalgo Walltet \",\n                className: \"w-[50px] h-[50px] md:w-[3.90625vw] md:h-[3.90625vw]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-[18px] leading-[21.6px] md:text-[1.40625vw] md:leading-[1.6875] font-[700] text-[#1E131A]\",\n                children: \"Myalgo Walltet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 1\n      }, this), showAddressInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-[26.95px] md:pt-[2.10546875vw] text-center \",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-[20px] leading-[24px] md:leading-[1.875vw] md:text-[1.5625vw] text-[#FFFFFF] colus\",\n            children: \"Select Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            pt: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"z-[5] flex mb-[22px] md:mb-[1.71875vw] font-[colus] text-[#FFFFFF]\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full float-left\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full text-end\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 7\n          }, this), accountInfoArray.map((account, index) => {\n            const labelId = `checkbox-list-label-${index}`;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              selected: selectedAddress === account.address,\n              onClick: () => {\n                setAddressInfo(account.address);\n              },\n              id: labelId,\n              className: \"flex justify-center  md:pb-[2.50390625vw] pb-[32px] pointer-cursor  text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cursor-pointer\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mx-[auto] w-[191px] mt-[9px]  h-[70px] md:w-[14.921875vw]  md:h-[5.46875vw] bg-[#FF005C] rounded-[8px] flex items-center gap-x-[11px]     justify-center \",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-[16px] leading-[22px] md:leading-[1.71875vw] md:text-[1.25vw] text-[#FFFFFF] font-[400]\",\n                    children: [account.address.substring(0, 12), \"...\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mx-[auto] w-[96px] mt-[9px] h-[70px] md:w-[7.5vw]  md:h-[5.46875vw] bg-[#EDDB0F] rounded-[8px] items-center justify-center\\r flex\\r \",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-[14px] leading-[19px] md:leading-[1.484375vw] md:text-[1.09375vw] text-[#15061E] font-[400]\",\n                    children: account.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 13\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginModal, \"WbadIrbJGksA2r0l4kz0SKhdJmY=\");\n_c = LoginModal;\nconst mapStateToProps = state => {\n  return {\n    selected: state.wallet.selected,\n    address: state.wallet.address,\n    error: state.feedback.error,\n    account_store: state.wallet.account_store,\n    selected_network: state.wallet.selected_network\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeWallet: payload => dispatch(changeWallet(payload)),\n    updateAddress: payload => dispatch(updateAddress(payload)),\n    addError: payload => dispatch(addError(payload)),\n    addChainAddressStore: payload => dispatch(addChainAddressStore(payload)),\n    changeNetwork: payload => dispatch(changeNetwork(payload)),\n    updateAdminAddr: payload => dispatch(updateAdminAddr(payload)),\n    changeWebMode: payload => dispatch(changeWebMode(payload))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginModal);\n\n// export default LoginModal\nvar _c;\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"names":["React","useEffect","connect","Button","CircularProgress","Dialog","DialogTitle","List","ListItem","ListItemButton","ListItemText","addChainAddressStore","changeNetwork","changeWallet","changeWebMode","updateAddress","updateAdminAddr","addError","Color","Wallet","CurrentNetwork","OptAppID","readAppGlobalState","getNetworkAlgodConfig","indexerClient","MyAlgoWalletSession","WebMode","encodeAddress","LoginModal","props","openModal","setOpenModal","useState","console","log","loading","setLoading","showAddressInfo","setShowAddressInfo","selected","accountInfoArray","setAccountInfoArray","account_store","selectedAddress","setSelectedAddress","address","undefined","selectedNetwork","setSelectedNetwork","selected_network","handleCloseModal","setShowWalletModal","handleNetworkSelection","network","addAdminAddr","getAccountInfo","value","accountStore","acc","accountInfo","lookupAccountByID","do","account","push","amount","handleClick","selectedWallet","ALGOSIGNER","AlgoSigner","then","d","accounts","ledger","length","catch","e","error","JSON","stringify","MY_ALGO_WALLET","myAlgo","connectToMyAlgo","globalState","Buffer","from","get","setAddressInfo","setTimeout","target","id","classList","remove","window","addEventListener","removeEventListener","color","RED","marginLeft","algosigner","myalgo","pt","map","index","labelId","substring","mapStateToProps","state","wallet","feedback","mapDispatchToProps","dispatch","payload"],"sources":["C:/Users/user/Desktop/Optimum-Staking-main/Optimum-Staking-main/frontend/src/components/modal/LoginModal.jsx"],"sourcesContent":["/* global AlgoSigner */\r\nimport React, { useEffect } from 'react'\r\nimport algosigner from \"../../assets/images/algosigner.svg\"\r\nimport myalgo  from \"../../assets/images/myalgo.svg\"\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Dialog,\r\n    DialogTitle,\r\n    List,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemText\r\n} from '@mui/material';\r\nimport {\r\n    addChainAddressStore,\r\n    changeNetwork,\r\n    changeWallet,\r\n    changeWebMode,\r\n    updateAddress,\r\n    updateAdminAddr\r\n} from '../../redux/wallet/actions';\r\nimport { addError } from '../../redux/feedback_reducer';\r\n\r\nimport { Color, Wallet, CurrentNetwork } from '../../constants/constants';\r\nimport { OptAppID, readAppGlobalState } from '../../utils/common';\r\nimport { getNetworkAlgodConfig, indexerClient } from '../../utils/algob.config';\r\nimport { MyAlgoWalletSession, WebMode } from '@algo-builder/web';\r\nimport { encodeAddress } from 'algosdk';\r\n\r\n\r\nconst LoginModal = (props) => {\r\n  const [openModal, setOpenModal] = React.useState(true);\r\n  console.log(props)\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [showAddressInfo, setShowAddressInfo] = React.useState(\r\n      props.selected\r\n  );\r\n  const [accountInfoArray, setAccountInfoArray] = React.useState(\r\n      props.account_store ? props.account_store : []\r\n  );\r\n  const [selectedAddress, setSelectedAddress] = React.useState(\r\n      props.address ? props.address : undefined\r\n  );\r\n\r\n  const [selectedNetwork, setSelectedNetwork] = React.useState(\r\n      props.selected_network\r\n  );\r\n  const handleCloseModal = () => props.setShowWalletModal(false);\r\n//   const handleCloseModal = () => setOpenModal(false);\r\n\r\n  async function handleNetworkSelection() {\r\n      let network = CurrentNetwork;\r\n      props.changeNetwork(network);\r\n      setSelectedNetwork(network);\r\n      await addAdminAddr(network);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n      // props.closeModal(openModal)\r\n    //   setShowWalletModal()\r\n      handleNetworkSelection();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [openModal]);\r\n\r\n  async function getAccountInfo(value) {\r\n      let accountStore = [];\r\n      for (const acc of value) {\r\n          if (acc && acc.address) {\r\n              const accountInfo = await indexerClient(selectedNetwork)\r\n                  .lookupAccountByID(acc.address)\r\n                  .do();\r\n\r\n              let account = accountInfo.account;\r\n              accountStore.push({\r\n                  address: account.address,\r\n                  amount: account.amount / 1e6\r\n              });\r\n          }\r\n      }\r\n      setAccountInfoArray(accountStore);\r\n      return accountStore;\r\n  }\r\n\r\n  const handleClick = async (selectedWallet) => {\r\n      if (selectedWallet === Wallet.ALGOSIGNER) {\r\n          if (typeof AlgoSigner === 'undefined') {\r\n              AlgoSigner.connect()\r\n                  .then(async (d) => {\r\n                      const address =\r\n                          (await AlgoSigner.accounts({\r\n                              ledger: selectedNetwork\r\n                          })) ?? [];\r\n                      if (address.length) {\r\n                          props.changeWallet(Wallet.ALGOSIGNER);\r\n                          props.changeWebMode(\r\n                              new WebMode(AlgoSigner, selectedNetwork)\r\n                          );\r\n                          // fetching only if new address is added to wallet (since network change is not allowed by sign out)\r\n                          if (address.length === accountInfoArray.length) {\r\n                              setLoading(true);\r\n                              const accountInfo = await getAccountInfo(\r\n                                  address\r\n                              );\r\n                              setLoading(false);\r\n                              props.addChainAddressStore(accountInfo);\r\n                          }\r\n                          setShowAddressInfo(true);\r\n                      }\r\n                  })\r\n                  .catch((e) => {\r\n                      console.error(e);\r\n                      props.addError(JSON.stringify(e));\r\n                      handleCloseModal();\r\n                  });\r\n          } else {\r\n              props.addError('AlgoSigner is NOT installed.');\r\n              handleCloseModal();\r\n          }\r\n      } else if (selectedWallet === Wallet.MY_ALGO_WALLET) {\r\n          let myAlgo = new MyAlgoWalletSession(\r\n              getNetworkAlgodConfig(selectedNetwork)\r\n          );\r\n          \r\n          await myAlgo.connectToMyAlgo().catch((e) => {\r\n              console.error(e);\r\n              props.addError(JSON.stringify(e));\r\n              handleCloseModal();\r\n          });\r\n          props.changeWebMode(myAlgo);\r\n          if (myAlgo.accounts.length) {\r\n              setLoading(true);\r\n              const accountInfo = await getAccountInfo(myAlgo.accounts);\r\n              setLoading(false);\r\n              props.addChainAddressStore(accountInfo);\r\n              props.changeWallet(Wallet.MY_ALGO_WALLET);\r\n              setShowAddressInfo(true);\r\n          }\r\n      }\r\n  };\r\n\r\n  async function addAdminAddr(network) {\r\n      const globalState = await readAppGlobalState(\r\n          selectedAddress,\r\n          OptAppID(network),\r\n          network\r\n      );\r\n      const address = encodeAddress(\r\n          Buffer.from(globalState.get('admin'), 'base64')\r\n      );\r\n      props.updateAdminAddr(address);\r\n  }\r\n\r\n  function setAddressInfo(address) {\r\n      setSelectedAddress(address);\r\n      props.updateAddress(address);\r\n      setTimeout(() => {\r\n          handleCloseModal();\r\n      }, 500);\r\n  }\r\n\r\n    useEffect(()=>{\r\n        const handleClick =(e)=>{ \r\n            e.target.id =='loginModal' &&  e.target.classList.remove('active')\r\n        }\r\n        window.addEventListener('click',handleClick)\r\n        return ()=> window.removeEventListener('click',handleClick)\r\n    },[])\r\n  return (\r\n    \r\n    <div id='loginModal' className='active w-[100%]  h-[100vh] fixed top-0 left-0 flex justify-center items-center z-[222]'>\r\n      <div className='bg-[#16041B] absolute opacity-[0.6] pointer-events-none \r\n      w-[100%] h-[100%]\r\n      '></div>\r\n     \r\n      <div className='pop-up flex w-[320px] h-[320px] flex-col items-center justify-center md:w-[25vw] md:h-[21.484375vw] z-[2] overflow-hidden relative '>\r\n    \r\n      <div className='loginModalOverlays'>\r\n    <div className=\"loginModalOverlayTop\"></div>\r\n    <div className=\"loginModalOverlayRightBotom\"></div>\r\n    <div className=\"loginModalOverlayRightBotom2\"></div>\r\n</div>\r\n{!showAddressInfo &&\r\n<div className='flex w-[320px] h-[320px] flex-col items-center justify-center md:w-[25vw] md:h-[21.484375vw] z-[2] overflow-hidden relative'>\r\n   \r\n   <h4 className='text-[20px] z-[5] leading-[24px] mb-[22px] md:text-[1.5625vw] md:leading-[1.875vw] text-center md:mb-[1.71875vw] font-[colus] text-[#FFFFFF]'>Connect to wallet</h4>\r\n      {loading ? (\r\n      \r\n      <div className='w-[273px] cursor-pointer z-[5] h-[82px] md:w-[21.328125vw] md:h-[6.40625vw] mx-[auto] bg-[#EDDB0F] rounded-[9px] flex justify-start items-center\r\npl-[16px] md:pl-[1.25vw]'>\r\n    <div className='flex items-center gap-x-[12px] md:gap-x-[0.9375vw]'>\r\n    <CircularProgress\r\n                size=\"2rem\"\r\n                style={{\r\n                    color: Color.RED,\r\n                    marginLeft: 10\r\n                }}\r\n            />\r\n        <span className='text-[18px] leading-[21.6px] md:text-[1.40625vw] md:leading-[1.6875] font-[700] text-[#1E131A]'> Fetching Address</span>\r\n    </div>\r\n        </div>\r\n      ) : (\r\n        <div className='flex w-[320px] h-[320px] flex-col items-center justify-center md:w-[25vw] md:h-[21.484375vw] z-[2] overflow-hidden relative'>\r\n        <div className='w-[273px] cursor-pointer z-[5] h-[82px] md:w-[21.328125vw] md:h-[6.40625vw] mx-[auto] bg-[#EDDB0F] rounded-[9px] mb-[16px] md:mb-[1.25vw]\r\n        flex justify-start items-center\r\n        pl-[16px] md:pl-[1.25vw] \r\n        '>\r\n            <div  onClick={() =>  handleClick(Wallet.ALGOSIGNER)\r\n                                                } className='flex items-center gap-x-[12px] md:gap-x-[0.9375vw]'>\r\n                <img src={algosigner} alt=\"Algosigner \" className='w-[50px] h-[50px] md:w-[3.90625vw] md:h-[3.90625vw]' />\r\n                <span className='text-[18px] leading-[21.6px] md:text-[1.40625vw] md:leading-[1.6875] font-[700] text-[#1E131A]'>Algosigner</span>\r\n            </div>\r\n        </div>\r\n        <div onClick={() => {\r\n                                setLoading(true);\r\n                                handleClick(\r\n                                    Wallet.MY_ALGO_WALLET\r\n                                );\r\n                            }} className='w-[273px] cursor-pointer z-[5] h-[82px] md:w-[21.328125vw] md:h-[6.40625vw] mx-[auto] bg-[#EDDB0F] rounded-[9px] flex justify-start items-center\r\n        pl-[16px] md:pl-[1.25vw]'>\r\n            <div className='flex items-center gap-x-[12px] md:gap-x-[0.9375vw]'>\r\n                <img src={myalgo} alt=\"Myalgo Walltet \" className='w-[50px] h-[50px] md:w-[3.90625vw] md:h-[3.90625vw]' />\r\n                <span className='text-[18px] leading-[21.6px] md:text-[1.40625vw] md:leading-[1.6875] font-[700] text-[#1E131A]'>Myalgo Walltet</span>\r\n            </div>\r\n        </div> \r\n        </div> ) }\r\n</div> }\r\n{showAddressInfo &&\r\n  <div>\r\n\r\n    <div className='pt-[26.95px] md:pt-[2.10546875vw] text-center '>\r\n        <h4 className='text-[20px] leading-[24px] md:leading-[1.875vw] md:text-[1.5625vw] text-[#FFFFFF] colus'>Select Address</h4>\r\n    </div>\r\n  <List sx={{ pt: 0 }}>\r\n      <div className=\"z-[5] flex mb-[22px] md:mb-[1.71875vw] font-[colus] text-[#FFFFFF]\">\r\n          <div className=\"w-full float-left\">Address</div>\r\n          <div className=\"w-full text-end\">Amount</div>\r\n      </div>\r\n      \r\n    {accountInfoArray.map((account, index) => {\r\n          const labelId = `checkbox-list-label-${index}`;\r\n          return (\r\n            <div           selected={\r\n                selectedAddress ===\r\n                account.address\r\n            }\r\n            onClick={() => {\r\n                setAddressInfo(\r\n                    account.address\r\n                );\r\n            }} id={labelId} className='flex justify-center  md:pb-[2.50390625vw] pb-[32px] pointer-cursor  text-center'>\r\n                    <div className='cursor-pointer'>\r\n                    <div  className='mx-[auto] w-[191px] mt-[9px]  h-[70px] md:w-[14.921875vw]  md:h-[5.46875vw] bg-[#FF005C] rounded-[8px] flex items-center gap-x-[11px]     justify-center '>\r\n                    <span className='text-[16px] leading-[22px] md:leading-[1.71875vw] md:text-[1.25vw] text-[#FFFFFF] font-[400]'>{account.address.substring(\r\n                                          0,\r\n                                          12\r\n                                      )}\r\n                                      ...</span>\r\n            \r\n                    </div>\r\n                    </div>\r\n                <div>\r\n                <div className='mx-[auto] w-[96px] mt-[9px] h-[70px] md:w-[7.5vw]  md:h-[5.46875vw] bg-[#EDDB0F] rounded-[8px] items-center justify-center\r\n                    flex\r\n                    '>\r\n                    <span className='text-[14px] leading-[19px] md:leading-[1.484375vw] md:text-[1.09375vw] text-[#15061E] font-[400]'>{account.amount}</span>\r\n            \r\n                    </div>\r\n                </div>\r\n                \r\n                </div>  \r\n          );\r\n      })}\r\n  </List>\r\n</div>\r\n}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      selected: state.wallet.selected,\r\n      address: state.wallet.address,\r\n      error: state.feedback.error,\r\n      account_store: state.wallet.account_store,\r\n      selected_network: state.wallet.selected_network\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      changeWallet: (payload) => dispatch(changeWallet(payload)),\r\n      updateAddress: (payload) => dispatch(updateAddress(payload)),\r\n      addError: (payload) => dispatch(addError(payload)),\r\n      addChainAddressStore: (payload) =>\r\n          dispatch(addChainAddressStore(payload)),\r\n      changeNetwork: (payload) => dispatch(changeNetwork(payload)),\r\n      updateAdminAddr: (payload) => dispatch(updateAdminAddr(payload)),\r\n      changeWebMode: (payload) => dispatch(changeWebMode(payload))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginModal);\r\n\r\n\r\n// export default LoginModal"],"mappings":"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"},"metadata":{},"sourceType":"module"}