{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nexport default class LookupAccountAssets extends JSONRequest {\n  /**\n   * Returns asset about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient.lookupAccountAssets(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idassets)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(c, intDecoding, account) {\n    super(c, intDecoding);\n    this.account = account;\n    this.account = account;\n  }\n  /**\n   * @returns `/v2/accounts/${account}/assets`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/assets`;\n  }\n  /**\n   * Add a limit for filter.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit) {\n    this.query.limit = limit;\n    return this;\n  }\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   * @category query\n   */\n  round(round) {\n    this.query.round = round;\n    return this;\n  }\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   *\n   * const accountAssetsPage1 = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountAssetsPage2 = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .next(accountAssetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken) {\n    this.query.next = nextToken;\n    return this;\n  }\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   * @param value\n   * @category query\n   */\n  includeAll() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this.query['include-all'] = value;\n    return this;\n  }\n  /**\n   * Specify an assetID to search for.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const assetAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .assetId(assetId)\n   *        .do();\n   * ```\n   * @param index - the assetID\n   * @category query\n   */\n  assetId(index) {\n    this.query['asset-id'] = index;\n    return this;\n  }\n}","map":{"version":3,"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAIxC,eAAc,MAAOC,mBAAoB,SAAQD,WAAW;EAC1D;;;;;;;;;;;;;EAaAE,YACEC,CAAa,EACbC,WAAwB,EAChBC,OAAe;IAEvB,KAAK,CAACF,CAAC,EAAEC,WAAW,CAAC;IAFb,YAAO,GAAPC,OAAO;IAGf,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EAEA;;;EAGAC,IAAI;IACF,OAAO,gBAAgB,IAAI,CAACD,OAAO,SAAS;EAC9C;EAEA;;;;;;;;;;;;;;;;EAgBAE,KAAK,CAACA,KAAa;IACjB,IAAI,CAACC,KAAK,CAACD,KAAK,GAAGA,KAAK;IACxB,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;EAeAE,KAAK,CAACA,KAAa;IACjB,IAAI,CAACD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACxB,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;;;;;;;;EAsBAC,SAAS,CAACA,SAAiB;IACzB,IAAI,CAACF,KAAK,CAACG,IAAI,GAAGD,SAAS;IAC3B,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;EAcAE,UAAU,GAAa;IAAA,IAAZC,KAAK,uEAAG,IAAI;IACrB,IAAI,CAACL,KAAK,CAAC,aAAa,CAAC,GAAGK,KAAK;IACjC,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;EAeAC,OAAO,CAACC,KAAa;IACnB,IAAI,CAACP,KAAK,CAAC,UAAU,CAAC,GAAGO,KAAK;IAC9B,OAAO,IAAI;EACb","names":["JSONRequest","LookupAccountAssets","constructor","c","intDecoding","account","path","limit","query","round","nextToken","next","includeAll","value","assetId","index"],"sourceRoot":"","sources":["../../../../../src/client/v2/indexer/lookupAccountAssets.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}