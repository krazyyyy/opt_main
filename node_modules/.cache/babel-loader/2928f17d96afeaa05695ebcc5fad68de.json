{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nexport default class LookupApplications extends JSONRequest {\n  /**\n   * Returns information about the passed application.\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const appInfo = await indexerClient.lookupApplications(appId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-id)\n   * @param index - The ID of the application to look up.\n   * @category GET\n   */\n  constructor(c, intDecoding, index) {\n    super(c, intDecoding);\n    this.index = index;\n    this.index = index;\n  }\n  /**\n   * @returns `/v2/applications/${index}`\n   */\n  path() {\n    return `/v2/applications/${this.index}`;\n  }\n  /**\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example 1\n   * ```typescript\n   * const appId = 60553466;\n   * const appInfo = await indexerClient\n   *        .lookupApplications(appId)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const appId = 60553466;\n   * const appInfo = await indexerClient\n   *        .lookupApplications(appId)\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value - default true when called without passing a value\n   * @category query\n   */\n  includeAll() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    this.query['include-all'] = value;\n    return this;\n  }\n}","map":{"version":3,"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAIxC,eAAc,MAAOC,kBAAmB,SAAQD,WAAW;EACzD;;;;;;;;;;;;;EAaAE,YAAYC,CAAa,EAAEC,WAAwB,EAAUC,KAAa;IACxE,KAAK,CAACF,CAAC,EAAEC,WAAW,CAAC;IADsC,UAAK,GAALC,KAAK;IAEhE,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEA;;;EAGAC,IAAI;IACF,OAAO,oBAAoB,IAAI,CAACD,KAAK,EAAE;EACzC;EAEA;;;;;;;;;;;;;;;;;;;;;;;;EAwBAE,UAAU,GAAa;IAAA,IAAZC,KAAK,uEAAG,IAAI;IACrB,IAAI,CAACC,KAAK,CAAC,aAAa,CAAC,GAAGD,KAAK;IACjC,OAAO,IAAI;EACb","names":["JSONRequest","LookupApplications","constructor","c","intDecoding","index","path","includeAll","value","query"],"sourceRoot":"","sources":["../../../../../src/client/v2/indexer/lookupApplications.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}