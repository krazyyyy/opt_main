{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ASADefsSchema = exports.ASADefSchema = exports.AddressSchema = void 0;\nconst z = __importStar(require(\"zod\"));\nexports.AddressSchema = z.string();\n// https://developer.algorand.org/docs/reference/rest-apis/algod/\nconst totalRegex = /^\\d+$/;\nexports.ASADefSchema = z.object({\n  name: z.string().optional(),\n  total: z.union([z.number(), z.bigint(), z.string()]) // 'string' to support bigint from yaml file\n  .refine(t => totalRegex.test(String(t)) && BigInt(t) <= 0xffffffffffffffffn && BigInt(t) >= 0n, {\n    message: \"Total must be a positive number <= 2^64-1\"\n  }),\n  decimals: z.union([z.number(), z.bigint()]).refine(decimals => decimals <= 19 && decimals >= 0, {\n    message: \"Decimals must be between 0 (non divisible) and 19\"\n  }),\n  defaultFrozen: z.boolean().optional(),\n  unitName: z.string().optional().refine(unitName => !unitName || unitName.length <= 8, {\n    message: \"Unit name must not be longer than 8 bytes\"\n  }),\n  url: z.string().optional().refine(url => !url || url.length <= 96, {\n    message: \"URL must not be longer than 96 bytes\"\n  }),\n  metadataHash: z.string().or(z.instanceof(Buffer)).or(z.instanceof(Uint8Array)).optional().refine(m => !m || typeof m === \"string\" && Buffer.from(m).byteLength === 32 || m instanceof Uint8Array && m.length === 32, {\n    message: \"Metadata Hash must be a 32 byte Uint8Array or 32 byte string\"\n  }),\n  note: z.string().optional(),\n  noteb64: z.string().optional(),\n  manager: exports.AddressSchema.optional(),\n  reserve: exports.AddressSchema.optional(),\n  freeze: exports.AddressSchema.optional(),\n  clawback: exports.AddressSchema.optional(),\n  optInAccNames: z.array(z.string()).optional()\n});\nexports.ASADefsSchema = z.record(exports.ASADefSchema);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEaA,qBAAa,GAAGC,CAAC,CAACC,MAAM,EAAE;AAEvC;AACA,MAAMC,UAAU,GAAG,OAAO;AAEbH,oBAAY,GAAGC,CAAC,CAACG,MAAM,CAAC;EACpCC,IAAI,EAAEJ,CAAC,CAACC,MAAM,EAAE,CAACI,QAAQ,EAAE;EAC3BC,KAAK,EAAEN,CAAC,CACNO,KAAK,CAAC,CAACP,CAAC,CAACQ,MAAM,EAAE,EAAER,CAAC,CAACS,MAAM,EAAE,EAAET,CAAC,CAACC,MAAM,EAAE,CAAC,CAAC,CAAC;EAAA,CAC5CS,MAAM,CACLC,CAAC,IAAKT,UAAU,CAACU,IAAI,CAACC,MAAM,CAACF,CAAC,CAAC,CAAC,IAAIG,MAAM,CAACH,CAAC,CAAC,IAAI,mBAAmB,IAAIG,MAAM,CAACH,CAAC,CAAC,IAAI,EAAE,EACxF;IAAEI,OAAO,EAAE;EAA2C,CAAE,CACxD;EACFC,QAAQ,EAAEhB,CAAC,CACTO,KAAK,CAAC,CAACP,CAAC,CAACQ,MAAM,EAAE,EAAER,CAAC,CAACS,MAAM,EAAE,CAAC,CAAC,CAC/BC,MAAM,CAAEM,QAAQ,IAAKA,QAAQ,IAAI,EAAE,IAAIA,QAAQ,IAAI,CAAC,EAAE;IACtDD,OAAO,EAAE;GACT,CAAC;EACHE,aAAa,EAAEjB,CAAC,CAACkB,OAAO,EAAE,CAACb,QAAQ,EAAE;EACrCc,QAAQ,EAAEnB,CAAC,CACTC,MAAM,EAAE,CACRI,QAAQ,EAAE,CACVK,MAAM,CAAES,QAAQ,IAAK,CAACA,QAAQ,IAAIA,QAAQ,CAACC,MAAM,IAAI,CAAC,EAAE;IACxDL,OAAO,EAAE;GACT,CAAC;EACHM,GAAG,EAAErB,CAAC,CACJC,MAAM,EAAE,CACRI,QAAQ,EAAE,CACVK,MAAM,CAAEW,GAAG,IAAK,CAACA,GAAG,IAAIA,GAAG,CAACD,MAAM,IAAI,EAAE,EAAE;IAC1CL,OAAO,EAAE;GACT,CAAC;EACHO,YAAY,EAAEtB,CAAC,CACbC,MAAM,EAAE,CACRsB,EAAE,CAACvB,CAAC,CAACwB,UAAU,CAACC,MAAM,CAAC,CAAC,CACxBF,EAAE,CAACvB,CAAC,CAACwB,UAAU,CAACE,UAAU,CAAC,CAAC,CAC5BrB,QAAQ,EAAE,CACVK,MAAM,CACLiB,CAAC,IACD,CAACA,CAAC,IACD,OAAOA,CAAC,KAAK,QAAQ,IAAIF,MAAM,CAACG,IAAI,CAACD,CAAC,CAAC,CAACE,UAAU,KAAK,EAAG,IAC1DF,CAAC,YAAYD,UAAU,IAAIC,CAAC,CAACP,MAAM,KAAK,EAAG,EAC7C;IAAEL,OAAO,EAAE;EAA8D,CAAE,CAC3E;EACFe,IAAI,EAAE9B,CAAC,CAACC,MAAM,EAAE,CAACI,QAAQ,EAAE;EAC3B0B,OAAO,EAAE/B,CAAC,CAACC,MAAM,EAAE,CAACI,QAAQ,EAAE;EAC9B2B,OAAO,EAAEjC,qBAAa,CAACM,QAAQ,EAAE;EACjC4B,OAAO,EAAElC,qBAAa,CAACM,QAAQ,EAAE;EACjC6B,MAAM,EAAEnC,qBAAa,CAACM,QAAQ,EAAE;EAChC8B,QAAQ,EAAEpC,qBAAa,CAACM,QAAQ,EAAE;EAClC+B,aAAa,EAAEpC,CAAC,CAACqC,KAAK,CAACrC,CAAC,CAACC,MAAM,EAAE,CAAC,CAACI,QAAQ;CAC3C,CAAC;AAEWN,qBAAa,GAAGC,CAAC,CAACsC,MAAM,CAACvC,oBAAY,CAAC","names":["exports","z","string","totalRegex","object","name","optional","total","union","number","bigint","refine","t","test","String","BigInt","message","decimals","defaultFrozen","boolean","unitName","length","url","metadataHash","or","instanceof","Buffer","Uint8Array","m","from","byteLength","note","noteb64","manager","reserve","freeze","clawback","optInAccNames","array","record"],"sourceRoot":"","sources":["../src/types-input.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}