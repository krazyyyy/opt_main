{"ast":null,"code":"export const ADD_ERROR = 'Add Error';\nexport const REMOVE_ERROR = 'Remove Error';\nexport const ADD_SUCCESS = 'Add Success';\nexport const REMOVE_SUCCESS = 'Remove Success';\nexport const addError = value => {\n  return {\n    type: ADD_ERROR,\n    payload: value\n  };\n};\nexport const removeError = () => {\n  return {\n    type: REMOVE_ERROR\n  };\n};\nexport const addSuccess = value => {\n  return {\n    type: ADD_SUCCESS,\n    payload: value\n  };\n};\nexport const removeSuccess = () => {\n  return {\n    type: REMOVE_SUCCESS\n  };\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    error: '',\n    success: ''\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case REMOVE_ERROR:\n      return {\n        ...state,\n        error: ''\n      };\n    case ADD_SUCCESS:\n      return {\n        ...state,\n        success: action.payload\n      };\n    case REMOVE_SUCCESS:\n      return {\n        ...state,\n        success: ''\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_ERROR","REMOVE_ERROR","ADD_SUCCESS","REMOVE_SUCCESS","addError","value","type","payload","removeError","addSuccess","removeSuccess","reducer","state","error","success","action"],"sources":["C:/Users/user/Desktop/Optimum-Staking-main/Optimum-Staking-main/frontend/src/redux/feedback_reducer.js"],"sourcesContent":["export const ADD_ERROR = 'Add Error';\nexport const REMOVE_ERROR = 'Remove Error';\nexport const ADD_SUCCESS = 'Add Success';\nexport const REMOVE_SUCCESS = 'Remove Success';\n\nexport const addError = (value) => {\n    return {\n        type: ADD_ERROR,\n        payload: value\n    };\n};\n\nexport const removeError = () => {\n    return {\n        type: REMOVE_ERROR\n    };\n};\n\nexport const addSuccess = (value) => {\n    return {\n        type: ADD_SUCCESS,\n        payload: value\n    };\n};\n\nexport const removeSuccess = () => {\n    return {\n        type: REMOVE_SUCCESS\n    };\n};\n\nconst reducer = (state = { error: '', success: '' }, action) => {\n    switch (action.type) {\n        case ADD_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n\n        case REMOVE_ERROR:\n            return {\n                ...state,\n                error: ''\n            };\n\n        case ADD_SUCCESS:\n            return {\n                ...state,\n                success: action.payload\n            };\n\n        case REMOVE_SUCCESS:\n            return {\n                ...state,\n                success: ''\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,cAAc,GAAG,gBAAgB;AAE9C,OAAO,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC/B,OAAO;IACHC,IAAI,EAAEN,SAAS;IACfO,OAAO,EAAEF;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAM;EAC7B,OAAO;IACHF,IAAI,EAAEL;EACV,CAAC;AACL,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAIJ,KAAK,IAAK;EACjC,OAAO;IACHC,IAAI,EAAEJ,WAAW;IACjBK,OAAO,EAAEF;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMK,aAAa,GAAG,MAAM;EAC/B,OAAO;IACHJ,IAAI,EAAEH;EACV,CAAC;AACL,CAAC;AAED,MAAMQ,OAAO,GAAG,YAAgD;EAAA,IAA/CC,KAAK,uEAAG;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC;EAAA,IAAEC,MAAM;EACvD,QAAQA,MAAM,CAACT,IAAI;IACf,KAAKN,SAAS;MACV,OAAO;QACH,GAAGY,KAAK;QACRC,KAAK,EAAEE,MAAM,CAACR;MAClB,CAAC;IAEL,KAAKN,YAAY;MACb,OAAO;QACH,GAAGW,KAAK;QACRC,KAAK,EAAE;MACX,CAAC;IAEL,KAAKX,WAAW;MACZ,OAAO;QACH,GAAGU,KAAK;QACRE,OAAO,EAAEC,MAAM,CAACR;MACpB,CAAC;IAEL,KAAKJ,cAAc;MACf,OAAO;QACH,GAAGS,KAAK;QACRE,OAAO,EAAE;MACb,CAAC;IAEL;MACI,OAAOF,KAAK;EAAC;AAEzB,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}